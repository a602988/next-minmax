{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/env.mjs"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\n/**\n * 環境變數配置 - 程式碼優先的配置管理\n *\n * 設計原則：\n * 1. env.mjs 包含所有預設值和業務邏輯配置\n * 2. .env 檔案只覆寫需要變更或敏感的設定\n * 3. 開發時依賴預設值，生產時用環境變數覆蓋\n */\n\n/**\n * 伺服器端環境變數配置\n * 這些變數只在伺服器端使用，確保安全性，不會暴露給客戶端\n */\nconst server = {\n    // ==========================================\n    // 國際化與語系配置\n    // 控制多語系、地理位置偵測及語系重導功能\n    // ==========================================\n\n    /** 國際化功能總開關 */\n    INTERNATIONALIZATION_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** 多語系功能開關 */\n    MULTI_LANGUAGE_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** ip 地理偵測功能開關 */\n    GEO_DETECTION_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** 強制重導開關 */\n    FORCE_REDIRECT: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    // ==========================================\n    // 專案核心配置\n    // 專案基本資訊與預設語系設定\n    // ==========================================\n\n    /** 專案代碼 */\n    PROJECT_CODE: z.string().default(\"minmax2025\"),\n\n    /** routing - 預設語系 */\n    DEFAULT_LANGUAGE: z.string().default(\"zh-TW\"),\n\n    /** routing - 支援的語系 */\n    SUPPORTED_LOCALES: z.string().default('zh-TW,en'),\n\n    /** routing - 語系前綴  預設 不加*/\n    LOCALE_PREFIX_MODE: z.enum(['always', 'as-needed', 'never']).default('as-needed'),\n\n    /** routing - 啟用語系檢測 */\n    LOCALE_DETECTION_ENABLED: z.boolean().default(true),\n\n    /** 國家子網域對應表 (JSON) {\"TW\": \"tw\", \"US\": \"us\", \"JP\": \"jp\"} */\n    COUNTRY_SUBDOMAIN_MAP: z.string().default('{}'),\n\n    // ==========================================\n    // 🔄 快取系統配置\n    // 控制整體快取策略和生存時間\n    // ==========================================\n\n    /** 快取系統總開關 */\n    CACHE_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** CDN 快取協作開關 */\n    CACHE_CDN_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** 國際化快取策略 */\n    I18N_CACHE_STRATEGY: z.enum([\"memory\", \"redis\", \"none\"]).default(\"memory\"),\n\n    /** 快取預設生存時間 (秒) */\n    CACHE_DEFAULT_TTL: z.string().transform((val) => parseInt(val)).default(\"3600\"),\n\n    // ==========================================\n    // API 與外部服務配置\n    // API 網址、超時設定及第三方服務配置\n    // ==========================================\n\n    /** 外部後端 API 基礎網址 */\n    EXTERNAL_API_BASE_URL: z.string().default(\"https://v5.jeffy.test\"),\n\n    /** 一般 API 請求超時 (毫秒) */\n    API_TIMEOUT: z.string().transform((val) => parseInt(val)).default(\"5000\"),\n\n    /** 內容 API 請求超時 (毫秒) */\n    CONTENT_API_TIMEOUT: z.string().transform((val) => parseInt(val)).default(\"10000\"),\n\n    /** 地理位置 API 超時 (毫秒) */\n    GEO_API_TIMEOUT: z.string().transform((val) => parseInt(val)).default(\"800\"),\n\n    /** 地理位置服務提供商 */\n    GEO_API_PROVIDER: z.enum([\"ipapi\", \"ipinfo\", \"geoplugin\"]).default(\"geoplugin\"),\n\n    // ==========================================\n    // 開發與測試配置\n    // Mock API、錯誤模擬及開發工具設定\n    // ==========================================\n\n    /** Mock API 開關 */\n    USE_MOCK_API: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** Mock API 延遲模擬 (毫秒) */\n    MOCK_API_DELAY: z.string().transform((val) => parseInt(val)).default(\"100\"),\n\n    /** 錯誤模擬開關 */\n    MOCK_ERROR_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** 錯誤模擬機率 (0.0-1.0) */\n    MOCK_ERROR_RATE: z.string().transform((val) => parseFloat(val)).default(\"0.0\"),\n\n    // ==========================================\n    // 監控與日誌配置\n    // API 日誌記錄及效能監控開關\n    // ==========================================\n\n    /** API 請求日誌記錄 */\n    API_LOGGING_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** 效能監控開關 */\n    PERFORMANCE_MONITORING_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    // ==========================================\n    // 功能開關\n    // 各項業務功能的開關控制\n    // ==========================================\n\n    /** 會員功能開關 */\n   MEMBERSHIP_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    // ==========================================\n    // 🔐 敏感資訊\n    // 資料庫、API 金鑰等敏感資料，僅在 .env 中設定\n    // ==========================================\n\n    /** 資料庫連線字串 */\n    //DATABASE_URL: z.string().optional(),\n\n    /** Redis 連線字串 */\n    //REDIS_URL: z.string().optional(),\n\n    /** API 密鑰 */\n    //API_SECRET_KEY: z.string().optional(),\n\n    /** JWT 簽名密鑰 */\n   // JWT_SECRET: z.string().optional(),\n\n    /** 管理員 API 金鑰 */\n    //ADMIN_API_KEY: z.string().optional(),\n\n    /** 地理位置服務 API 金鑰 */\n    //GEO_API_KEY: z.string().optional(),\n};\n\n/**\n * 客戶端環境變數配置\n * 這些變數會暴露給瀏覽器，請避免包含敏感資訊\n * 所有變數都必須以 NEXT_PUBLIC_ 前綴開始\n */\n\nconst client = {\n    // ==========================================\n    // 🏗️ 專案基本資訊\n    // 前端顯示用的專案資訊和基礎配置\n    // ==========================================\n\n    /** 專案顯示名稱 */\n    NEXT_PUBLIC_PROJECT_NAME: z.string().default(\"demo測試網站\"),\n\n    /** routing - 預設語系 */\n    NEXT_PUBLIC_DEFAULT_LOCALE: z.string().default(\"zh-TW\"),\n\n    /** routing - 支援的語系 */\n    NEXT_PUBLIC_SUPPORTED_LOCALES: z.string().default('zh-TW,en'),\n\n    /** routing - 語系前綴  預設 不加*/\n    NEXT_PUBLIC_LOCALE_PREFIX_MODE: z.enum(['always', 'as-needed', 'never']).default('as-needed'),\n\n    /** routing - 啟用語系檢測 */\n    NEXT_PUBLIC_LOCALE_DETECTION_ENABLED: z.boolean().default(true),\n\n    /** API 版本號 */\n    NEXT_PUBLIC_API_VERSION: z.string().default(\"1.0.0\"),\n\n    // ==========================================\n    // 🌐 API 與服務配置\n    // 客戶端 API 呼叫相關設定\n    // ==========================================\n\n    /** 前端 API 基礎網址 */\n    NEXT_PUBLIC_API_BASE_URL: z.string().default(\"http://localhost:3000\"),\n\n    // ==========================================\n    // 🌍 國際化功能開關\n    // 前端國際化相關的功能控制\n    // ==========================================\n\n    /** 前端多語系功能開關 */\n    NEXT_PUBLIC_MULTI_LANGUAGE_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** 前端國際化功能總開關 */\n    NEXT_PUBLIC_INTERNATIONALIZATION_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    // ==========================================\n    // 🗺️ 地理位置偵測配置\n    // 使用者地理位置偵測與重導邏輯設定\n    // ==========================================\n\n    /** 地理位置偵測策略 */\n    NEXT_PUBLIC_GEO_DETECTION_STRATEGY: z.enum([\"cdn-only\", \"api-only\", \"cdn-fallback\"]).default(\"api-only\"),\n\n    /** ip 地理偵測功能開關 */\n    NEXT_PUBLIC_GEO_DETECTION_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** 地理重導模式 */\n    NEXT_PUBLIC_GEO_REDIRECT_MODE: z.enum([\"off\", \"suggest\", \"force\"]).default(\"suggest\"),\n\n    /** 強制重導開關 */\n    NEXT_PUBLIC_FORCE_REDIRECT: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** CDN 國家標頭名稱 */\n    NEXT_PUBLIC_CDN_COUNTRY_HEADER: z.string().default(\"cf-ipcountry\"),\n\n    // ==========================================\n    // 🔄 快取系統配置\n    // 前端快取策略和生存時間\n    // ==========================================\n\n    /** 前端快取功能開關 */\n    NEXT_PUBLIC_CACHE_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** 前端 CDN 快取協作開關 */\n    NEXT_PUBLIC_CACHE_CDN_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** 前端快取預設生存時間 (秒) */\n    NEXT_PUBLIC_CACHE_DEFAULT_TTL: z.string().transform((val) => parseInt(val)).default(\"3600\"),\n\n    // ==========================================\n    // ⚙️ 前端功能配置\n    // 前端特有的功能開關和配置\n    // ==========================================\n\n    /** 開發模式開關 */\n    NEXT_PUBLIC_DEV_MODE_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** 會員功能開關 */\n    NEXT_PUBLIC_MEMBERSHIP_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    // ==========================================\n    // 🔧 開發與測試配置\n    // 前端可見的開發工具設定\n    // ==========================================\n\n    /** 前端 Mock API 開關 */\n    NEXT_PUBLIC_USE_MOCK_API: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** 前端 Mock API 延遲模擬 (毫秒) */\n    NEXT_PUBLIC_MOCK_API_DELAY: z.string().transform((val) => parseInt(val)).default(\"100\"),\n\n    /** 前端錯誤模擬開關 */\n    NEXT_PUBLIC_MOCK_ERROR_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** 前端錯誤模擬機率 (0.0-1.0) */\n    NEXT_PUBLIC_MOCK_ERROR_RATE: z.string().transform((val) => parseFloat(val)).default(\"0.0\"),\n\n    // ==========================================\n    // 📊 監控與日誌配置\n    // 前端監控和日誌記錄設定\n    // ==========================================\n\n    /** 前端 API 請求日誌記錄 */\n    NEXT_PUBLIC_API_LOGGING_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** 前端效能監控開關 */\n    NEXT_PUBLIC_PERFORMANCE_MONITORING_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    // ==========================================\n    // 🔧 外部服務配置\n    // 第三方服務的公開配置項目\n    // ==========================================\n\n    /** 錯誤追蹤服務 DSN */\n    NEXT_PUBLIC_SENTRY_DSN: z.string().optional(),\n\n    /** 前端地理位置服務提供商 */\n    NEXT_PUBLIC_GEO_API_PROVIDER: z.enum([\"ipapi\", \"ipinfo\", \"geoplugin\"]).default(\"geoplugin\"),\n\n    // ==========================================\n    // ⏱️ 超時設定\n    // 前端 API 請求超時配置\n    // ==========================================\n\n    /** 前端一般 API 請求超時 (毫秒) */\n    NEXT_PUBLIC_API_TIMEOUT: z.string().transform((val) => parseInt(val)).default(\"30000\"),\n\n    /** 前端內容 API 請求超時 (毫秒) */\n    NEXT_PUBLIC_CONTENT_API_TIMEOUT: z.string().transform((val) => parseInt(val)).default(\"60000\"),\n\n    /** 前端地理位置 API 超時 (毫秒) */\n    NEXT_PUBLIC_GEO_API_TIMEOUT: z.string().transform((val) => parseInt(val)).default(\"5000\"),\n};\n\n// 取得所有 schema 的鍵名\nconst serverKeys = Object.keys(server);\nconst clientKeys = Object.keys(client);\n\nexport const env = createEnv({\n    server,\n    client,\n\n    /**\n     * 運行時環境變數映射\n     * 精確地從 process.env 映射我們定義的變數\n     */\n    runtimeEnv: {\n        ...Object.fromEntries(\n            serverKeys.map(key => [key, process.env[key]])\n        ),\n        ...Object.fromEntries(\n            clientKeys.map(key => [key, process.env[key]])\n        ),\n    },\n});"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA;;;;;;;CAOC,GAED;;;CAGC,GACD,MAAM,SAAS;IACX,6CAA6C;IAC7C,WAAW;IACX,sBAAsB;IACtB,6CAA6C;IAE7C,aAAa,GACb,8BAA8B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEpF,YAAY,GACZ,wBAAwB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAE9E,gBAAgB,GAChB,uBAAuB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAE7E,WAAW,GACX,gBAAgB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEtE,6CAA6C;IAC7C,SAAS;IACT,gBAAgB;IAChB,6CAA6C;IAE7C,SAAS,GACT,cAAc,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAEjC,mBAAmB,GACnB,kBAAkB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAErC,oBAAoB,GACpB,mBAAmB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAEtC,yBAAyB,GACzB,oBAAoB,qLAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAU;QAAa;KAAQ,EAAE,OAAO,CAAC;IAErE,qBAAqB,GACrB,0BAA0B,qLAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IAE9C,yDAAyD,GACzD,uBAAuB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAE1C,6CAA6C;IAC7C,YAAY;IACZ,gBAAgB;IAChB,6CAA6C;IAE7C,YAAY,GACZ,eAAe,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAErE,eAAe,GACf,mBAAmB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEzE,YAAY,GACZ,qBAAqB,qLAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAU;QAAS;KAAO,EAAE,OAAO,CAAC;IAEjE,iBAAiB,GACjB,mBAAmB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,SAAS,MAAM,OAAO,CAAC;IAExE,6CAA6C;IAC7C,cAAc;IACd,sBAAsB;IACtB,6CAA6C;IAE7C,kBAAkB,GAClB,uBAAuB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAE1C,qBAAqB,GACrB,aAAa,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,SAAS,MAAM,OAAO,CAAC;IAElE,qBAAqB,GACrB,qBAAqB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,SAAS,MAAM,OAAO,CAAC;IAE1E,qBAAqB,GACrB,iBAAiB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,SAAS,MAAM,OAAO,CAAC;IAEtE,cAAc,GACd,kBAAkB,qLAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAS;QAAU;KAAY,EAAE,OAAO,CAAC;IAEnE,6CAA6C;IAC7C,UAAU;IACV,uBAAuB;IACvB,6CAA6C;IAE7C,gBAAgB,GAChB,cAAc,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEpE,uBAAuB,GACvB,gBAAgB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,SAAS,MAAM,OAAO,CAAC;IAErE,WAAW,GACX,oBAAoB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAE1E,qBAAqB,GACrB,iBAAiB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,WAAW,MAAM,OAAO,CAAC;IAExE,6CAA6C;IAC7C,UAAU;IACV,kBAAkB;IAClB,6CAA6C;IAE7C,eAAe,GACf,qBAAqB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAE3E,WAAW,GACX,gCAAgC,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEtF,6CAA6C;IAC7C,OAAO;IACP,cAAc;IACd,6CAA6C;IAE7C,WAAW,GACZ,oBAAoB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;AAwB7E;AAEA;;;;CAIC,GAED,MAAM,SAAS;IACX,6CAA6C;IAC7C,aAAa;IACb,kBAAkB;IAClB,6CAA6C;IAE7C,WAAW,GACX,0BAA0B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAE7C,mBAAmB,GACnB,4BAA4B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAE/C,oBAAoB,GACpB,+BAA+B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAElD,yBAAyB,GACzB,gCAAgC,qLAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAU;QAAa;KAAQ,EAAE,OAAO,CAAC;IAEjF,qBAAqB,GACrB,sCAAsC,qLAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IAE1D,YAAY,GACZ,yBAAyB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAE5C,6CAA6C;IAC7C,eAAe;IACf,iBAAiB;IACjB,6CAA6C;IAE7C,gBAAgB,GAChB,0BAA0B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAE7C,6CAA6C;IAC7C,aAAa;IACb,eAAe;IACf,6CAA6C;IAE7C,cAAc,GACd,oCAAoC,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAE1F,eAAe,GACf,0CAA0C,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEhG,6CAA6C;IAC7C,eAAe;IACf,mBAAmB;IACnB,6CAA6C;IAE7C,aAAa,GACb,oCAAoC,qLAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAY;QAAY;KAAe,EAAE,OAAO,CAAC;IAE7F,gBAAgB,GAChB,mCAAmC,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEzF,WAAW,GACX,+BAA+B,qLAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAO;QAAW;KAAQ,EAAE,OAAO,CAAC;IAE3E,WAAW,GACX,4BAA4B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAElF,eAAe,GACf,gCAAgC,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAEnD,6CAA6C;IAC7C,YAAY;IACZ,cAAc;IACd,6CAA6C;IAE7C,aAAa,GACb,2BAA2B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEjF,kBAAkB,GAClB,+BAA+B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAErF,mBAAmB,GACnB,+BAA+B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,SAAS,MAAM,OAAO,CAAC;IAEpF,6CAA6C;IAC7C,YAAY;IACZ,eAAe;IACf,6CAA6C;IAE7C,WAAW,GACX,8BAA8B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEpF,WAAW,GACX,gCAAgC,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEtF,6CAA6C;IAC7C,aAAa;IACb,cAAc;IACd,6CAA6C;IAE7C,mBAAmB,GACnB,0BAA0B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEhF,0BAA0B,GAC1B,4BAA4B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,SAAS,MAAM,OAAO,CAAC;IAEjF,aAAa,GACb,gCAAgC,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEtF,uBAAuB,GACvB,6BAA6B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,WAAW,MAAM,OAAO,CAAC;IAEpF,6CAA6C;IAC7C,aAAa;IACb,cAAc;IACd,6CAA6C;IAE7C,kBAAkB,GAClB,iCAAiC,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAEvF,aAAa,GACb,4CAA4C,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,QAAQ,QAAQ,OAAO,CAAC;IAElG,6CAA6C;IAC7C,YAAY;IACZ,eAAe;IACf,6CAA6C;IAE7C,eAAe,GACf,wBAAwB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAE3C,gBAAgB,GAChB,8BAA8B,qLAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAS;QAAU;KAAY,EAAE,OAAO,CAAC;IAE/E,6CAA6C;IAC7C,UAAU;IACV,gBAAgB;IAChB,6CAA6C;IAE7C,uBAAuB,GACvB,yBAAyB,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,SAAS,MAAM,OAAO,CAAC;IAE9E,uBAAuB,GACvB,iCAAiC,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,SAAS,MAAM,OAAO,CAAC;IAEtF,uBAAuB,GACvB,6BAA6B,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAAQ,SAAS,MAAM,OAAO,CAAC;AACtF;AAEA,kBAAkB;AAClB,MAAM,aAAa,OAAO,IAAI,CAAC;AAC/B,MAAM,aAAa,OAAO,IAAI,CAAC;AAExB,MAAM,MAAM,CAAA,GAAA,qKAAA,CAAA,YAAS,AAAD,EAAE;IACzB;IACA;IAEA;;;KAGC,GACD,YAAY;QACR,GAAG,OAAO,WAAW,CACjB,WAAW,GAAG,CAAC,CAAA,MAAO;gBAAC;gBAAK,QAAQ,GAAG,CAAC,IAAI;aAAC,EAChD;QACD,GAAG,OAAO,WAAW,CACjB,WAAW,GAAG,CAAC,CAAA,MAAO;gBAAC;gBAAK,QAAQ,GAAG,CAAC,IAAI;aAAC,EAChD;IACL;AACJ"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/config/api.config.ts"],"sourcesContent":["import { env } from '@/env.mjs';\n\n/**\n * API 應用配置（只保留業務邏輯）\n * - 不鏡射 env 值；需要時於此集中處理條件/轉換/群組\n * - 命名使用小寫（camelCase）\n */\nexport const apiConfig = {\n    // 衍生：根據是否使用 Mock 選擇實際 baseUrl\n    baseUrl: env.USE_MOCK_API ? env.NEXT_PUBLIC_API_BASE_URL : env.EXTERNAL_API_BASE_URL,\n\n    // 衍生：根據是否使用 Mock 切換端點路徑\n    endpoints: env.USE_MOCK_API\n        ? {\n            language: '/api/ssr/languages',\n            locales: '/api/ssr/locales',\n            systemMenus: '/api/ssr/system-menus',\n            webData: '/api/ssr/web-data',\n            detail: '/api/ssr/detail',\n        }\n        : {\n            language: '/api/v1/languages',\n            locales: '/api/v1/locales',\n            systemMenus: '/api/v1/system-menus',\n            webData: '/api/v1/web-data',\n            detail: '/api/v1/detail',\n        },\n\n    // 群組：超時（毫秒）直接取 env，集中使用\n    timeouts: {\n        api: env.API_TIMEOUT,\n        content: env.CONTENT_API_TIMEOUT,\n        geo: env.GEO_API_TIMEOUT,\n    },\n\n    // 業務常數：重試策略（如需環境化，於此處加衍生邏輯）\n    retry: {\n        attempts: 3,\n        delay: 1000,\n        exponentialBackoff: true,\n    },\n\n    // 業務判斷：是否模擬延遲/錯誤與相關參數\n    shouldSimulateDelay: () => env.USE_MOCK_API && env.MOCK_API_DELAY > 0,\n    getMockDelay: () => env.MOCK_API_DELAY,\n    shouldSimulateError: () => env.MOCK_ERROR_ENABLED && Math.random() < env.MOCK_ERROR_RATE,\n} as const;\n\nexport type ApiConfig = typeof apiConfig;"],"names":[],"mappings":";;;AAAA;;AAOO,MAAM,YAAY;IACrB,8BAA8B;IAC9B,SAAS,mHAAA,CAAA,MAAG,CAAC,YAAY,GAAG,mHAAA,CAAA,MAAG,CAAC,wBAAwB,GAAG,mHAAA,CAAA,MAAG,CAAC,qBAAqB;IAEpF,wBAAwB;IACxB,WAAW,mHAAA,CAAA,MAAG,CAAC,YAAY,GACrB;QACE,UAAU;QACV,SAAS;QACT,aAAa;QACb,SAAS;QACT,QAAQ;IACZ,IACE;QACE,UAAU;QACV,SAAS;QACT,aAAa;QACb,SAAS;QACT,QAAQ;IACZ;IAEJ,wBAAwB;IACxB,UAAU;QACN,KAAK,mHAAA,CAAA,MAAG,CAAC,WAAW;QACpB,SAAS,mHAAA,CAAA,MAAG,CAAC,mBAAmB;QAChC,KAAK,mHAAA,CAAA,MAAG,CAAC,eAAe;IAC5B;IAEA,4BAA4B;IAC5B,OAAO;QACH,UAAU;QACV,OAAO;QACP,oBAAoB;IACxB;IAEA,sBAAsB;IACtB,qBAAqB,IAAM,mHAAA,CAAA,MAAG,CAAC,YAAY,IAAI,mHAAA,CAAA,MAAG,CAAC,cAAc,GAAG;IACpE,cAAc,IAAM,mHAAA,CAAA,MAAG,CAAC,cAAc;IACtC,qBAAqB,IAAM,mHAAA,CAAA,MAAG,CAAC,kBAAkB,IAAI,KAAK,MAAM,KAAK,mHAAA,CAAA,MAAG,CAAC,eAAe;AAC5F"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/config/app.client.config.ts"],"sourcesContent":["import { env } from '@/env.mjs';\n\n/**\n * 客戶端應用配置（僅保留必要的業務衍生值）\n * - 直接在使用處讀 env.NEXT_PUBLIC_*，此處不重複包裝\n * - 命名使用小寫（camelCase）\n */\nexport const appConfig = {\n    // 衍生：API 超時（毫秒），若無設定則回退 30000\n    apiTimeout:\n        typeof env.NEXT_PUBLIC_API_TIMEOUT === 'number'\n            ? env.NEXT_PUBLIC_API_TIMEOUT\n            : Number.parseInt(String(env.NEXT_PUBLIC_API_TIMEOUT ?? ''), 10) || 30000,\n\n    // 衍生：i18n 啟用（客戶端視角）的布林正規化\n    i18nEnabled:\n        typeof env.NEXT_PUBLIC_MULTI_LANGUAGE_ENABLED === 'boolean'\n            ? env.NEXT_PUBLIC_MULTI_LANGUAGE_ENABLED\n            : String(env.NEXT_PUBLIC_MULTI_LANGUAGE_ENABLED).toLowerCase() === 'true',\n} as const;\n\nexport type AppClientConfig = typeof appConfig;"],"names":[],"mappings":";;;AAAA;;AAOO,MAAM,YAAY;IACrB,8BAA8B;IAC9B,YACI,OAAO,mHAAA,CAAA,MAAG,CAAC,uBAAuB,KAAK,WACjC,mHAAA,CAAA,MAAG,CAAC,uBAAuB,GAC3B,OAAO,QAAQ,CAAC,OAAO,mHAAA,CAAA,MAAG,CAAC,uBAAuB,IAAI,KAAK,OAAO;IAE5E,0BAA0B;IAC1B,aACI,OAAO,mHAAA,CAAA,MAAG,CAAC,kCAAkC,KAAK,YAC5C,mHAAA,CAAA,MAAG,CAAC,kCAAkC,GACtC,OAAO,mHAAA,CAAA,MAAG,CAAC,kCAAkC,EAAE,WAAW,OAAO;AAC/E"}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/config/app.server.config.ts"],"sourcesContent":["import { env } from '@/env.mjs';\n\n/**\n * 服務端應用配置層\n * 只包含真正需要業務邏輯處理的配置\n */\nexport const SERVER_APP_CONFIG = {\n    // 國際化配置 - 數據轉換\n    i18n: {\n        supportedLocales: env.SUPPORTED_LOCALES.split(',').map((locale) => locale.trim()),\n        countrySubdomainMap: JSON.parse(env.COUNTRY_SUBDOMAIN_MAP || '{}'),\n    },\n\n    // API 配置 - 條件邏輯\n    api: {\n        baseUrl: env.USE_MOCK_API ? env.NEXT_PUBLIC_API_BASE_URL : env.EXTERNAL_API_BASE_URL,\n    },\n} as const;\n\n// 導出計算屬性 - 只包含真正的業務邏輯組合\nexport const SERVER_COMPUTED = {\n    /** 是否啟用完整國際化功能（伺服端視角） */\n    isI18nEnabled: () => env.INTERNATIONALIZATION_ENABLED && env.MULTI_LANGUAGE_ENABLED,\n\n    /** 檢查是否支援特定語系 */\n    isLocaleSupported: (locale: string) => SERVER_APP_CONFIG.i18n.supportedLocales.includes(locale),\n\n    /** 是否應該模擬 API 延遲 */\n    shouldSimulateDelay: () => env.USE_MOCK_API && env.MOCK_API_DELAY > 0,\n\n    /** 是否應該模擬錯誤 */\n    shouldSimulateError: () => env.MOCK_ERROR_ENABLED && Math.random() < env.MOCK_ERROR_RATE,\n} as const;\n\nexport type ServerAppConfig = typeof SERVER_APP_CONFIG;"],"names":[],"mappings":";;;;AAAA;;AAMO,MAAM,oBAAoB;IAC7B,eAAe;IACf,MAAM;QACF,kBAAkB,mHAAA,CAAA,MAAG,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,SAAW,OAAO,IAAI;QAC9E,qBAAqB,KAAK,KAAK,CAAC,mHAAA,CAAA,MAAG,CAAC,qBAAqB,IAAI;IACjE;IAEA,gBAAgB;IAChB,KAAK;QACD,SAAS,mHAAA,CAAA,MAAG,CAAC,YAAY,GAAG,mHAAA,CAAA,MAAG,CAAC,wBAAwB,GAAG,mHAAA,CAAA,MAAG,CAAC,qBAAqB;IACxF;AACJ;AAGO,MAAM,kBAAkB;IAC3B,uBAAuB,GACvB,eAAe,IAAM,mHAAA,CAAA,MAAG,CAAC,4BAA4B,IAAI,mHAAA,CAAA,MAAG,CAAC,sBAAsB;IAEnF,eAAe,GACf,mBAAmB,CAAC,SAAmB,kBAAkB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;IAExF,kBAAkB,GAClB,qBAAqB,IAAM,mHAAA,CAAA,MAAG,CAAC,YAAY,IAAI,mHAAA,CAAA,MAAG,CAAC,cAAc,GAAG;IAEpE,aAAa,GACb,qBAAqB,IAAM,mHAAA,CAAA,MAAG,CAAC,kBAAkB,IAAI,KAAK,MAAM,KAAK,mHAAA,CAAA,MAAG,CAAC,eAAe;AAC5F"}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/config/locale.server.config.ts"],"sourcesContent":["import { env } from '@/env.mjs';\n\n/**\n * 服務端語系配置（只保留需要的轉換與工具）\n * - 不鏡射 env 值（如 defaultLocale/localePrefixMode），在使用處直接讀 env\n * - 命名使用小寫（camelCase）\n */\nexport const serverLocaleConfig = {\n    // 衍生：支援語系陣列\n    supportedLocales: env.SUPPORTED_LOCALES.split(',').map((l) => l.trim()),\n\n    // 衍生：國家子網域映射\n    countrySubdomainMap: JSON.parse(env.COUNTRY_SUBDOMAIN_MAP || '{}'),\n\n    // 工具：語系驗證（使用衍生 supportedLocales）\n    isValidLocale: (locale: string): boolean => {\n        return serverLocaleConfig.supportedLocales.includes(locale);\n    },\n\n    // 工具：依國家取子網域（使用衍生 countrySubdomainMap）\n    getSubdomainByCountry: (country: string): string | null => {\n        return serverLocaleConfig.countrySubdomainMap[country] || null;\n    },\n} as const;\n\nexport type ServerLocaleConfig = typeof serverLocaleConfig;"],"names":[],"mappings":";;;AAAA;;AAOO,MAAM,qBAAqB;IAC9B,YAAY;IACZ,kBAAkB,mHAAA,CAAA,MAAG,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;IAEpE,aAAa;IACb,qBAAqB,KAAK,KAAK,CAAC,mHAAA,CAAA,MAAG,CAAC,qBAAqB,IAAI;IAE7D,iCAAiC;IACjC,eAAe,CAAC;QACZ,OAAO,mBAAmB,gBAAgB,CAAC,QAAQ,CAAC;IACxD;IAEA,uCAAuC;IACvC,uBAAuB,CAAC;QACpB,OAAO,mBAAmB,mBAAmB,CAAC,QAAQ,IAAI;IAC9D;AACJ"}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/config/locale.client.config.ts"],"sourcesContent":["import { env } from '@/env.mjs';\n\n/**\n * 客戶端語系配置（僅保留業務邏輯）\n * 原則：\n * - 不重複 env.mjs，原始值在使用處直接讀 env.NEXT_PUBLIC_*\n * - 只做必要的衍生/工具，命名用小寫（camelCase）\n */\nexport const clientLocaleConfig = {\n    // 衍生：支援語系陣列\n    supportedLocales: env.NEXT_PUBLIC_SUPPORTED_LOCALES.split(',').map((l) => l.trim()),\n\n    // 工具：驗證語系是否被支援（使用衍生 supportedLocales）\n    isValidLocale: (locale: string): boolean => {\n        return clientLocaleConfig.supportedLocales.includes(locale);\n    },\n} as const;\n\nexport type ClientLocaleConfig = typeof clientLocaleConfig;\n"],"names":[],"mappings":";;;AAAA;;AAQO,MAAM,qBAAqB;IAC9B,YAAY;IACZ,kBAAkB,mHAAA,CAAA,MAAG,CAAC,6BAA6B,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;IAEhF,sCAAsC;IACtC,eAAe,CAAC;QACZ,OAAO,mBAAmB,gBAAgB,CAAC,QAAQ,CAAC;IACxD;AACJ"}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/config/cache.client.config.ts"],"sourcesContent":["/**\n * 快取系統客戶端配置檔案（僅業務邏輯）\n */\n\n// redis 相關鍵格式（客戶端僅作 key 規則使用，不連線）\nconst redisConfig = {\n    prefix: 'minmax:',\n    keySeparator: ':',\n} as const;\n\n/**\n * 快取資料類型定義 - 統一管理所有快取相關設定\n * - 僅保留客戶端需要的預設 ttl/tags/描述\n */\nconst cacheDataTypes = {\n    languages: {\n        ttl: 7200, // 2 小時\n        tags: ['languages', 'static-data'] as string[],\n        description: '語言資料快取',\n    },\n    locales: {\n        ttl: 7200, // 2 小時\n        tags: ['locales', 'static-data'] as string[],\n        description: '地區設定快取',\n    },\n    menus: {\n        ttl: 3600, // 1 小時\n        tags: ['menus', 'navigation'] as string[],\n        description: '選單資料快取',\n    },\n    webData: {\n        ttl: 3600, // 1 小時\n        tags: ['web-data', 'static-data'] as string[],\n        description: '網站資料快取',\n    },\n    pages: {\n        ttl: 1800, // 30 分鐘\n        tags: ['pages', 'content'] as string[],\n        description: '頁面內容快取',\n    },\n    geoData: {\n        ttl: 1800, // 30 分鐘\n        tags: ['geo-data', 'location'] as string[],\n        description: '地理位置資料快取',\n    },\n    userData: {\n        ttl: 600, // 10 分鐘\n        tags: ['user-data', 'dynamic-data'] as string[],\n        description: '使用者資料快取',\n    },\n    apiResponse: {\n        ttl: 3600, // 預設 1 小時，服務端可覆蓋\n        tags: ['api-response'] as string[],\n        description: 'API 回應快取',\n    },\n} as const;\n\nexport type CacheDataType = keyof typeof cacheDataTypes;\n\n/**\n * 客戶端快取配置（僅業務邏輯）\n */\nexport const cacheConfig = {\n    // 基礎配置（客戶端預設值）\n    enabled: true,\n    cdnEnabled: false,\n    defaultTtl: 3600,\n    strategy: 'memory' as const,\n\n    // key 規則（僅作為 key 生成規範）\n    redis: redisConfig,\n\n    // 從 cacheDataTypes 自動生成 ttl 與 tags 映射\n    ttl: {\n        languages: cacheDataTypes.languages.ttl,\n        locales: cacheDataTypes.locales.ttl,\n        menus: cacheDataTypes.menus.ttl,\n        webData: cacheDataTypes.webData.ttl,\n        pages: cacheDataTypes.pages.ttl,\n        geoData: cacheDataTypes.geoData.ttl,\n        userData: cacheDataTypes.userData.ttl,\n        apiResponse: cacheDataTypes.apiResponse.ttl,\n    },\n\n    tags: {\n        languages: cacheDataTypes.languages.tags,\n        locales: cacheDataTypes.locales.tags,\n        menus: cacheDataTypes.menus.tags,\n        webData: cacheDataTypes.webData.tags,\n        pages: cacheDataTypes.pages.tags,\n        geoData: cacheDataTypes.geoData.tags,\n        userData: cacheDataTypes.userData.tags,\n        apiResponse: cacheDataTypes.apiResponse.tags,\n    },\n\n    // 快取鍵值生成（不依賴自身物件，避免初始化順序問題）\n    generateKey: (type: CacheDataType, identifier: string, locale?: string): string => {\n        const parts = [redisConfig.prefix, type, identifier];\n        if (locale) parts.push(locale);\n        return parts.join(redisConfig.keySeparator);\n    },\n} as const;\n\n/**\n * 取得指定資料類型的完整配置\n */\nexport function getCacheConfig(type: CacheDataType) {\n    return cacheDataTypes[type];\n}\n\n/**\n * 取得指定資料類型的 TTL（毫秒）\n */\nexport function getCacheTtl(type: CacheDataType): number {\n    return cacheDataTypes[type].ttl * 1000;\n}\n\n/**\n * 取得指定資料類型的標籤\n */\nexport function getCacheTags(type: CacheDataType): string[] {\n    return cacheDataTypes[type].tags;\n}\n\n/**\n * 根據標籤找到相關的資料類型\n */\nexport function getDataTypesByTag(tag: string): CacheDataType[] {\n    return Object.entries(cacheDataTypes)\n        .filter(([_, config]) => config.tags.includes(tag))\n        .map(([key]) => key as CacheDataType);\n}\n\n/**\n * 取得所有可用的標籤\n */\nexport function getAllCacheTags(): string[] {\n    const allTags = Object.values(cacheDataTypes).flatMap((config) => config.tags);\n    return [...new Set(allTags)];\n}\n\n/**\n * 取得快取配置摘要（用於除錯）\n */\nexport function getCacheConfigSummary() {\n    return Object.entries(cacheDataTypes).map(([type, config]) => ({\n        type,\n        ttl: `${config.ttl}s (${config.ttl / 60}min)`,\n        tags: config.tags.join(', '),\n        description: config.description,\n    }));\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/config/cache.server.config.ts"],"sourcesContent":["/**\n * 快取系統服務端配置（僅業務邏輯）\n * - 不重複 env：用 getter 直接回傳 env 值\n * - 保留 server 覆寫 ttl 與鍵規則（generateKey）\n * - 命名使用小寫（camelCase）\n */\nimport { env } from '@/env.mjs';\nimport {\n    cacheConfig,                 // client 的 key 規則與基本 ttl/tags\n    getCacheConfig,\n    getCacheTtl as getCacheTtlClientMs,\n    getCacheTags as getCacheTagsClient,\n    getDataTypesByTag,\n    getAllCacheTags,\n    getCacheConfigSummary,\n    type CacheDataType,\n} from './cache.client.config';\n\n// 服務端覆寫：僅作必要差異（例：apiResponse）\nconst serverTtl = {\n    ...cacheConfig.ttl,\n    apiResponse: env.CACHE_DEFAULT_TTL, // 秒\n} as const;\n\nconst serverTags = {\n    ...cacheConfig.tags,\n} as const;\n\nexport const serverCacheConfig = {\n    // key 規則（沿用 client）\n    redis: cacheConfig.redis,\n\n    // ttl/tags 聚合（server 覆寫）\n    ttl: serverTtl,   // 秒\n    tags: serverTags,\n\n    // 快取鍵值生成（純規則）\n    generateKey: (type: CacheDataType, identifier: string, locale?: string): string => {\n        const parts = [cacheConfig.redis.prefix, type, identifier];\n        if (locale) parts.push(locale);\n        return parts.join(cacheConfig.redis.keySeparator);\n    },\n} as const;\n\n// 直接讀 env（避免鏡射）\nexport const isCacheEnabled = (): boolean => env.CACHE_ENABLED;\nexport const isCdnEnabled = (): boolean => env.CACHE_CDN_ENABLED;\nexport const getDefaultTtl = (): number => env.CACHE_DEFAULT_TTL; // 秒\nexport const getCacheStrategy = (): 'memory' | 'redis' | 'none' => env.I18N_CACHE_STRATEGY;\n\n// 共用導出\nexport {\n    getCacheConfig,\n    getCacheTtlClientMs,\n    getCacheTagsClient,\n    getDataTypesByTag,\n    getAllCacheTags,\n    getCacheConfigSummary,\n    type CacheDataType,\n};\n\n// 服務端便捷函式\nexport function getServerCacheConfig(type: CacheDataType) {\n    const base = getCacheConfig(type);\n    return {\n        type,\n        ttl: serverTtl[type],            // 秒\n        tags: serverTags[type],\n        description: base.description,\n    };\n}\nexport function getServerCacheTtl(type: CacheDataType): number {\n    return serverTtl[type];            // 秒\n}\nexport function getServerCacheTtlMs(type: CacheDataType): number {\n    return serverTtl[type] * 1000;     // 毫秒\n}\nexport function getServerCacheTags(type: CacheDataType): string[] {\n    return serverTags[type];\n}\nexport function getServerCacheConfigSummary() {\n    return (Object.keys(serverTtl) as CacheDataType[]).map((type) => ({\n        type,\n        ttl: `${serverTtl[type]}s (${serverTtl[type] / 60}min)`,\n        tags: serverTags[type].join(', '),\n        description: getCacheConfig(type).description,\n    }));\n}\n\nexport type ServerCacheConfig = typeof serverCacheConfig;"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;;;;;;AACD;AACA;;;AAWA,8BAA8B;AAC9B,MAAM,YAAY;IACd,GAAG,kJAAA,CAAA,cAAW,CAAC,GAAG;IAClB,aAAa,mHAAA,CAAA,MAAG,CAAC,iBAAiB;AACtC;AAEA,MAAM,aAAa;IACf,GAAG,kJAAA,CAAA,cAAW,CAAC,IAAI;AACvB;AAEO,MAAM,oBAAoB;IAC7B,oBAAoB;IACpB,OAAO,kJAAA,CAAA,cAAW,CAAC,KAAK;IAExB,yBAAyB;IACzB,KAAK;IACL,MAAM;IAEN,cAAc;IACd,aAAa,CAAC,MAAqB,YAAoB;QACnD,MAAM,QAAQ;YAAC,kJAAA,CAAA,cAAW,CAAC,KAAK,CAAC,MAAM;YAAE;YAAM;SAAW;QAC1D,IAAI,QAAQ,MAAM,IAAI,CAAC;QACvB,OAAO,MAAM,IAAI,CAAC,kJAAA,CAAA,cAAW,CAAC,KAAK,CAAC,YAAY;IACpD;AACJ;AAGO,MAAM,iBAAiB,IAAe,mHAAA,CAAA,MAAG,CAAC,aAAa;AACvD,MAAM,eAAe,IAAe,mHAAA,CAAA,MAAG,CAAC,iBAAiB;AACzD,MAAM,gBAAgB,IAAc,mHAAA,CAAA,MAAG,CAAC,iBAAiB,EAAE,IAAI;AAC/D,MAAM,mBAAmB,IAAmC,mHAAA,CAAA,MAAG,CAAC,mBAAmB;;AAcnF,SAAS,qBAAqB,IAAmB;IACpD,MAAM,OAAO,CAAA,GAAA,kJAAA,CAAA,iBAAc,AAAD,EAAE;IAC5B,OAAO;QACH;QACA,KAAK,SAAS,CAAC,KAAK;QACpB,MAAM,UAAU,CAAC,KAAK;QACtB,aAAa,KAAK,WAAW;IACjC;AACJ;AACO,SAAS,kBAAkB,IAAmB;IACjD,OAAO,SAAS,CAAC,KAAK,EAAa,IAAI;AAC3C;AACO,SAAS,oBAAoB,IAAmB;IACnD,OAAO,SAAS,CAAC,KAAK,GAAG,MAAU,KAAK;AAC5C;AACO,SAAS,mBAAmB,IAAmB;IAClD,OAAO,UAAU,CAAC,KAAK;AAC3B;AACO,SAAS;IACZ,OAAO,AAAC,OAAO,IAAI,CAAC,WAA+B,GAAG,CAAC,CAAC,OAAS,CAAC;YAC9D;YACA,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC;YACvD,MAAM,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC;YAC5B,aAAa,CAAA,GAAA,kJAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,WAAW;QACjD,CAAC;AACL"}},
    {"offset": {"line": 590, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/config/index.ts"],"sourcesContent":["/**\n * 統一配置導出\n * 整合所有配置相關的設定\n */\n\n// 導出環境變數配置\n// export { env } from '../env.mjs';\n\n// 導出 API 配置\nexport * from './api.config';\n\n// 導出應用程式配置\nexport * from './app.client.config';\nexport * from './app.server.config';\n\n// 導出語系配置\nexport * from './locale.server.config';\nexport * from './locale.client.config';\n\n// 導出快取配置\nexport * from './cache.client.config';\nexport * from './cache.server.config';"],"names":[],"mappings":"AAAA;;;CAGC,GAED,WAAW;AACX,oCAAoC;AAEpC,YAAY;;AACZ;AAEA,WAAW;AACX;AACA;AAEA,SAAS;AACT;AACA;AAEA,SAAS;AACT;AACA"}},
    {"offset": {"line": 718, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/i18n/routing.ts"],"sourcesContent":["import { defineRouting } from 'next-intl/routing';\nimport { SERVER_LOCALE_CONFIG } from '@/config/';\n\nexport const routing = defineRouting({\n    // 支援的語系 - 從環境變數讀取，會被 API 動態覆蓋\n    locales: SERVER_LOCALE_CONFIG.SUPPORTED_LOCALES as [string, ...string[]],\n\n    // 預設語系 - 從環境變數讀取，會被 API 動態覆蓋\n    defaultLocale: SERVER_LOCALE_CONFIG.DEFAULT_LOCALE,\n\n    // 語系前綴模式 - 從環境變數讀取\n    localePrefix: SERVER_LOCALE_CONFIG.LOCALE_PREFIX_MODE,\n\n    // 啟用語系檢測 - 從環境變數讀取\n    localeDetection: SERVER_LOCALE_CONFIG.DETECTION.ENABLED\n});"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,MAAM,UAAU,CAAA,GAAA,0OAAA,CAAA,gBAAa,AAAD,EAAE;IACjC,8BAA8B;IAC9B,SAAS,+IAAA,CAAA,uBAAoB,CAAC,iBAAiB;IAE/C,6BAA6B;IAC7B,eAAe,+IAAA,CAAA,uBAAoB,CAAC,cAAc;IAElD,mBAAmB;IACnB,cAAc,+IAAA,CAAA,uBAAoB,CAAC,kBAAkB;IAErD,mBAAmB;IACnB,iBAAiB,+IAAA,CAAA,uBAAoB,CAAC,SAAS,CAAC,OAAO;AAC3D"}},
    {"offset": {"line": 740, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import createMiddleware from 'next-intl/middleware';\nimport {routing} from './i18n/routing';\n\nexport default createMiddleware(routing);\n\nexport const config = {\n  // 匹配所有路徑，除了以下情況：\n  // - 以 `/api`、`/trpc`、`/_next` 或 `/_vercel` 開頭的路徑\n  // - 包含點號的路徑（例如 `favicon.ico`）\n  matcher: '/((?!api|trpc|_next|_vercel|.*\\\\..*).*)'\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;;;uCAEe,CAAA,GAAA,8LAAA,CAAA,UAAgB,AAAD,EAAE,8HAAA,CAAA,UAAO;AAEhC,MAAM,SAAS;IACpB,iBAAiB;IACjB,iDAAiD;IACjD,8BAA8B;IAC9B,SAAS;AACX"}}]
}