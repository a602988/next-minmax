{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/i18n/routing.ts"],"sourcesContent":["import { defineRouting } from 'next-intl/routing';\n\nexport const routing = defineRouting({\n  // 支援的語系 - 這個會被 API 動態覆蓋\n  locales: ['zh-TW', 'zh-CN', 'en', 'ja'],\n  \n  // 預設語系 - 這個也會被 API 動態覆蓋\n  defaultLocale: 'zh-TW',\n  \n  // 預設語系不加前綴\n  localePrefix: 'as-needed',\n  \n  // 啟用語系檢測\n  localeDetection: true\n});\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,UAAU,CAAA,GAAA,kOAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,wBAAwB;IACxB,SAAS;QAAC;QAAS;QAAS;QAAM;KAAK;IAEvC,wBAAwB;IACxB,eAAe;IAEf,WAAW;IACX,cAAc;IAEd,SAAS;IACT,iBAAiB;AACnB","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/i18n/navigation.ts"],"sourcesContent":["import {createNavigation} from 'next-intl/navigation';\nimport {routing} from './routing';\n\n//這是在 Next.js 導航 API 基礎上，考量到路由設定的輕量級封裝。\nexport const {Link, redirect, usePathname, useRouter, getPathname} =\n    createNavigation(routing);\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;AAGO,MAAM,EAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC,GAC9D,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE,sHAAA,CAAA,UAAO","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/lib/locale-utils.ts"],"sourcesContent":["import { routing } from '@/i18n/routing';\n\n/**\n * 移除路徑中的語系前綴，取得基底路徑\n * @param pathname - 當前路徑 (例如: /en/about 或 /about)\n * @returns 不含語系前綴的基底路徑 (例如: /about)\n */\nexport function getBasePathWithoutLocale(pathname: string): string {\n    const parts = pathname.split('/').filter(Boolean);\n    const first = parts[0];\n\n    // 檢查第一段是否為支援的語系\n    const hasLocalePrefix = !!first && routing.locales.includes(first as any);\n\n    // 移除語系前綴\n    const withoutLocale = hasLocalePrefix ? parts.slice(1) : parts;\n    const path = `/${withoutLocale.join('/')}`;\n\n    return path === '' ? '/' : path;\n}\n\n/**\n * 檢查路徑是否包含語系前綴\n * @param pathname - 當前路徑\n * @returns 是否包含語系前綴\n */\nexport function hasLocalePrefix(pathname: string): boolean {\n    const parts = pathname.split('/').filter(Boolean);\n    const first = parts[0];\n    return !!first && routing.locales.includes(first as any);\n}\n\n/**\n * 將查詢參數附加到路徑上\n * @param path - 基底路徑\n * @param searchParams - URLSearchParams 物件\n * @returns 包含查詢參數的完整路徑\n */\nexport function appendSearchParams(path: string, searchParams?: URLSearchParams | null): string {\n    const qsString = searchParams?.toString();\n    return qsString ? `${path}?${qsString}` : path;\n}\n\n/**\n * 為語系切換器準備 href\n * 整合路徑處理和查詢參數邏輯\n * @param pathname - 當前路徑\n * @param searchParams - 查詢參數\n * @returns 處理後的 href\n */\nexport function prepareLanguageSwitcherHref(pathname: string, searchParams?: URLSearchParams | null): string {\n    const basePath = getBasePathWithoutLocale(pathname);\n    return appendSearchParams(basePath, searchParams);\n}"],"names":[],"mappings":";;;;;;AAAA;;AAOO,SAAS,yBAAyB,QAAgB;IACrD,MAAM,QAAQ,SAAS,KAAK,CAAC,KAAK,MAAM,CAAC;IACzC,MAAM,QAAQ,KAAK,CAAC,EAAE;IAEtB,gBAAgB;IAChB,MAAM,kBAAkB,CAAC,CAAC,SAAS,sHAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;IAE5D,SAAS;IACT,MAAM,gBAAgB,kBAAkB,MAAM,KAAK,CAAC,KAAK;IACzD,MAAM,OAAO,CAAC,CAAC,EAAE,cAAc,IAAI,CAAC,MAAM;IAE1C,OAAO,SAAS,KAAK,MAAM;AAC/B;AAOO,SAAS,gBAAgB,QAAgB;IAC5C,MAAM,QAAQ,SAAS,KAAK,CAAC,KAAK,MAAM,CAAC;IACzC,MAAM,QAAQ,KAAK,CAAC,EAAE;IACtB,OAAO,CAAC,CAAC,SAAS,sHAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;AAC/C;AAQO,SAAS,mBAAmB,IAAY,EAAE,YAAqC;IAClF,MAAM,WAAW,cAAc;IAC/B,OAAO,WAAW,GAAG,KAAK,CAAC,EAAE,UAAU,GAAG;AAC9C;AASO,SAAS,4BAA4B,QAAgB,EAAE,YAAqC;IAC/F,MAAM,WAAW,yBAAyB;IAC1C,OAAO,mBAAmB,UAAU;AACxC","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/features/language/components/LanguageSwitcher.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { usePathname, useSearchParams } from 'next/navigation';\nimport { useLocale } from 'next-intl';\nimport type { Language } from '@/types';\nimport { Link } from '@/i18n/navigation';\nimport { routing } from '@/i18n/routing';\nimport { prepareLanguageSwitcherHref } from '@/lib/locale-utils';\n\ntype LanguageSwitcherProps = {\n    className?: string;\n    languages: Language[];\n    showLabels?: boolean;\n    variant?: 'dropdown' | 'inline';\n};\n\nexport default function LanguageSwitcher(\n    {\n         className,\n         languages,\n         showLabels = true,\n         variant = 'inline'\n     }: LanguageSwitcherProps\n    ) {\n    const pathname = usePathname() || '/';\n    const currentLocale = useLocale();\n    const searchParams = useSearchParams();\n\n    // 若無語系列表，顯示錯誤訊息或不渲染\n    if (!languages || languages.length === 0) {\n        if (process.env.NODE_ENV === 'development') {\n            return (\n                <div className={className}>\n                    <span className=\"text-red-500 text-sm\">⚠️ 無語系資料</span>\n                </div>\n            );\n        }\n        return null;\n    }\n\n    const currentLanguage = languages.find(lang => lang.id === currentLocale);\n\n    return (\n        <nav\n            className={className}\n            aria-label=\"Language switcher\"\n            role=\"navigation\"\n        >\n            {/* 結構化資料標記 */}\n            <script\n                type=\"application/ld+json\"\n                dangerouslySetInnerHTML={{\n                    __html: JSON.stringify({\n                        \"@context\": \"https://schema.org\",\n                        \"@type\": \"WebSite\",\n                        \"inLanguage\": languages.map(lang => ({\n                            \"@type\": \"Language\",\n                            \"name\": lang.title,\n                            \"alternateName\": lang.native,\n                            \"identifier\": lang.id\n                        }))\n                    })\n                }}\n            />\n\n            {variant === 'dropdown' ? (\n                // 下拉選單版本\n                <div className=\"relative\">\n                    <button\n                        className=\"inline-flex items-center gap-2 rounded px-3 py-1 text-sm bg-gray-100 text-gray-800 hover:bg-gray-200\"\n                        aria-expanded=\"false\"\n                        aria-haspopup=\"true\"\n                        aria-label={`Current language: ${currentLanguage?.native || currentLanguage?.title}. Click to change language`}\n                    >\n                        {currentLanguage?.icon && (\n                            <span\n                                aria-hidden=\"true\"\n                                className={`${currentLanguage.icon} inline-block h-4 w-4`}\n                            />\n                        )}\n                        {showLabels && (\n                            <span>{currentLanguage?.native || currentLanguage?.title}</span>\n                        )}\n                        <svg className=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                    </button>\n                    {/* 下拉選單內容 */}\n                </div>\n            ) : (\n                // 內聯版本\n                <ul\n                    className=\"flex flex-wrap items-center gap-2\"\n                    role=\"list\"\n                >\n                    {languages.map((lang) => {\n                        const label = lang.native || lang.title;\n                        const href = prepareLanguageSwitcherHref(pathname, searchParams);\n                        const active = currentLocale === lang.id;\n\n                        return (\n                            <li key={lang.id} role=\"listitem\">\n                                <Link\n                                    href={href}\n                                    locale={lang.id as (typeof routing.locales)[number]}\n                                    className={\n                                        'inline-flex items-center gap-2 rounded px-3 py-1 text-sm transition-colors ' +\n                                        (active\n                                                ? 'bg-blue-600 text-white'\n                                                : 'bg-gray-100 text-gray-800 hover:bg-gray-200 focus:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2'\n                                        )\n                                    }\n                                    aria-current={active ? 'page' : undefined}\n                                    aria-label={`Switch to ${lang.title}${lang.native ? ` (${lang.native})` : ''}`}\n                                    title={`${lang.title}${lang.native ? ` (${lang.native})` : ''}`}\n                                    hrefLang={lang.id}\n                                    lang={lang.id}\n                                >\n                                    {lang.icon && (\n                                        <span\n                                            aria-hidden=\"true\"\n                                            className={`${lang.icon} inline-block h-4 w-4`}\n                                        />\n                                    )}\n\n                                    {showLabels && <span>{label}</span>}\n\n                                    {lang.default && (\n                                        <span\n                                            className=\"ml-1 rounded bg-blue-500/20 px-1.5 py-0.5 text-[10px]\"\n                                            aria-label=\"Default language\"\n                                        >\n                                            default\n                                        </span>\n                                    )}\n\n                                    {/* 視覺上隱藏但對螢幕閱讀器可見的文字 */}\n                                    <span className=\"sr-only\">\n                                        {active ? '(current)' : `Switch to ${lang.title}`}\n                                    </span>\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n            )}\n        </nav>\n    );\n}"],"names":[],"mappings":"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","debugId":null}}]
}