{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/env.mjs"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\n/**\n * 環境變數配置 - 程式碼優先的配置管理\n *\n * 設計原則：\n * 1. env.mjs 包含所有預設值和業務邏輯配置\n * 2. .env 檔案只覆寫需要變更或敏感的設定\n * 3. 開發時依賴預設值，生產時用環境變數覆蓋\n */\n\n/**\n * 伺服器端環境變數配置\n * 這些變數只在伺服器端使用，確保安全性，不會暴露給客戶端\n */\nconst server = {\n    // ==========================================\n    // 國際化與語系配置\n    // 控制多語系、地理位置偵測及語系重導功能\n    // ==========================================\n\n    /** 國際化功能總開關 */\n    INTERNATIONALIZATION_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** 多語系功能開關 */\n    MULTI_LANGUAGE_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** ip 地理偵測功能開關 */\n    GEO_DETECTION_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** 強制重導開關 */\n    FORCE_REDIRECT: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    // ==========================================\n    // 專案核心配置\n    // 專案基本資訊與預設語系設定\n    // ==========================================\n\n    /** 專案代碼 */\n    PROJECT_CODE: z.string().default(\"minmax2025\"),\n\n    /** routing - 預設語系 */\n    DEFAULT_LANGUAGE: z.string().default(\"zh-TW\"),\n\n    /** routing - 支援的語系 */\n    SUPPORTED_LOCALES: z.string().default('zh-TW,en'),\n\n    /** routing - 語系前綴  預設 不加*/\n    LOCALE_PREFIX_MODE: z.enum(['always', 'as-needed', 'never']).default('as-needed'),\n\n    /** routing - 啟用語系檢測 */\n    LOCALE_DETECTION_ENABLED: z.boolean().default(true),\n\n    /** 國家子網域對應表 (JSON) {\"TW\": \"tw\", \"US\": \"us\", \"JP\": \"jp\"} */\n    COUNTRY_SUBDOMAIN_MAP: z.string().default('{}'),\n\n    // ==========================================\n    // 🔄 快取系統配置\n    // 控制整體快取策略和生存時間\n    // ==========================================\n\n    /** 快取系統總開關 */\n    CACHE_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** CDN 快取協作開關 */\n    CACHE_CDN_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** 國際化快取策略 */\n    I18N_CACHE_STRATEGY: z.enum([\"memory\", \"redis\", \"none\"]).default(\"memory\"),\n\n    /** 快取預設生存時間 (秒) */\n    CACHE_DEFAULT_TTL: z.string().transform((val) => parseInt(val)).default(\"3600\"),\n\n    // ==========================================\n    // API 與外部服務配置\n    // API 網址、超時設定及第三方服務配置\n    // ==========================================\n\n    /** 外部後端 API 基礎網址 */\n    EXTERNAL_API_BASE_URL: z.string().default(\"https://v5.jeffy.test\"),\n\n    /** 一般 API 請求超時 (毫秒) */\n    API_TIMEOUT: z.string().transform((val) => parseInt(val)).default(\"5000\"),\n\n    /** 內容 API 請求超時 (毫秒) */\n    CONTENT_API_TIMEOUT: z.string().transform((val) => parseInt(val)).default(\"10000\"),\n\n    /** 地理位置 API 超時 (毫秒) */\n    GEO_API_TIMEOUT: z.string().transform((val) => parseInt(val)).default(\"800\"),\n\n    /** 地理位置服務提供商 */\n    GEO_API_PROVIDER: z.enum([\"ipapi\", \"ipinfo\", \"geoplugin\"]).default(\"geoplugin\"),\n\n    // ==========================================\n    // 開發與測試配置\n    // Mock API、錯誤模擬及開發工具設定\n    // ==========================================\n\n    /** Mock API 開關 */\n    USE_MOCK_API: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** Mock API 延遲模擬 (毫秒) */\n    MOCK_API_DELAY: z.string().transform((val) => parseInt(val)).default(\"100\"),\n\n    /** 錯誤模擬開關 */\n    MOCK_ERROR_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    /** 錯誤模擬機率 (0.0-1.0) */\n    MOCK_ERROR_RATE: z.string().transform((val) => parseFloat(val)).default(\"0.0\"),\n\n    // ==========================================\n    // 監控與日誌配置\n    // API 日誌記錄及效能監控開關\n    // ==========================================\n\n    /** API 請求日誌記錄 */\n    API_LOGGING_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** 效能監控開關 */\n    PERFORMANCE_MONITORING_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    // ==========================================\n    // 功能開關\n    // 各項業務功能的開關控制\n    // ==========================================\n\n    /** 會員功能開關 */\n   MEMBERSHIP_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    // ==========================================\n    // 🔐 敏感資訊\n    // 資料庫、API 金鑰等敏感資料，僅在 .env 中設定\n    // ==========================================\n\n    /** 資料庫連線字串 */\n    //DATABASE_URL: z.string().optional(),\n\n    /** Redis 連線字串 */\n    //REDIS_URL: z.string().optional(),\n\n    /** API 密鑰 */\n    //API_SECRET_KEY: z.string().optional(),\n\n    /** JWT 簽名密鑰 */\n   // JWT_SECRET: z.string().optional(),\n\n    /** 管理員 API 金鑰 */\n    //ADMIN_API_KEY: z.string().optional(),\n\n    /** 地理位置服務 API 金鑰 */\n    //GEO_API_KEY: z.string().optional(),\n};\n\n/**\n * 客戶端環境變數配置\n * 這些變數會暴露給瀏覽器，請避免包含敏感資訊\n * 所有變數都必須以 NEXT_PUBLIC_ 前綴開始\n */\nconst client = {\n    // ==========================================\n    // 🏗️ 專案基本資訊\n    // 前端顯示用的專案資訊和基礎配置\n    // ==========================================\n\n    /** 專案顯示名稱 */\n    NEXT_PUBLIC_PROJECT_NAME: z.string().default(\"demo測試網站\"),\n\n    /** routing - 預設語系 */\n    NEXT_PUBLIC_DEFAULT_LOCALE: z.string().default(\"zh-TW\"),\n\n    /** routing - 支援的語系 */\n    NEXT_PUBLIC_SUPPORTED_LOCALES: z.string().default('zh-TW,en'),\n\n    /** routing - 語系前綴  預設 不加*/\n    NEXT_PUBLIC_LOCALE_PREFIX_MODE: z.enum(['always', 'as-needed', 'never']).default('as-needed'),\n\n    /** API 版本號 */\n    NEXT_PUBLIC_API_VERSION: z.string().default(\"1.0.0\"),\n\n    // ==========================================\n    // 🌐 API 與服務配置\n    // 客戶端 API 呼叫相關設定\n    // ==========================================\n\n    /** 前端 API 基礎網址 */\n    NEXT_PUBLIC_API_BASE_URL: z.string().default(\"http://localhost:3000\"),\n\n    // ==========================================\n    // 🌍 國際化功能開關\n    // 前端國際化相關的功能控制\n    // ==========================================\n\n    /** 前端多語系功能開關 */\n    NEXT_PUBLIC_MULTI_LANGUAGE_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    // ==========================================\n    // 🗺️ 地理位置偵測配置\n    // 使用者地理位置偵測與重導邏輯設定\n    // ==========================================\n\n    /** 地理位置偵測策略 */\n    NEXT_PUBLIC_GEO_DETECTION_STRATEGY: z.enum([\"cdn-only\", \"api-only\", \"cdn-fallback\"]).default(\"api-only\"),\n\n    /** 地理重導模式 */\n    NEXT_PUBLIC_GEO_REDIRECT_MODE: z.enum([\"off\", \"suggest\", \"force\"]).default(\"suggest\"),\n\n    /** CDN 國家標頭名稱 */\n    NEXT_PUBLIC_CDN_COUNTRY_HEADER: z.string().default(\"cf-ipcountry\"),\n\n    // ==========================================\n    // ⚙️ 前端功能配置\n    // 前端特有的功能開關和配置\n    // ==========================================\n\n    /** 前端快取功能開關 */\n    NEXT_PUBLIC_CACHE_ENABLED: z.string().transform((val) => val === \"true\").default(\"true\"),\n\n    /** 開發模式開關 */\n    NEXT_PUBLIC_DEV_MODE_ENABLED: z.string().transform((val) => val === \"true\").default(\"false\"),\n\n    // ==========================================\n    // 🔧 外部服務配置\n    // 第三方服務的公開配置項目\n    // ==========================================\n\n    /** 錯誤追蹤服務 DSN */\n    NEXT_PUBLIC_SENTRY_DSN: z.string().optional(),\n};\n\n// 取得所有 schema 的鍵名\nconst serverKeys = Object.keys(server);\nconst clientKeys = Object.keys(client);\n\nexport const env = createEnv({\n    server,\n    client,\n\n    /**\n     * 運行時環境變數映射\n     * 精確地從 process.env 映射我們定義的變數\n     */\n    runtimeEnv: {\n        ...Object.fromEntries(\n            serverKeys.map(key => [key, process.env[key]])\n        ),\n        ...Object.fromEntries(\n            clientKeys.map(key => [key, process.env[key]])\n        ),\n    },\n});"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/config/api.config.ts"],"sourcesContent":["import { env } from '@/env.mjs';\n\n/**\n * API 相關配置\n */\nexport const API_CONFIG = {\n    // 基礎配置\n    BASE_URL: env.NEXT_PUBLIC_API_BASE_URL, // 前端 API 基礎網址\n    EXTERNAL_BASE_URL: env.EXTERNAL_API_BASE_URL,  // 外部後端 API\n    PROJECT_NAME: env.PROJECT_CODE, // 專案代碼名稱\n\n    // 超時設定\n    TIMEOUT: {\n        DEFAULT: env.API_TIMEOUT, // 一般 API 請求超時 (毫秒)\n        CONTENT: env.CONTENT_API_TIMEOUT, // 內容 API 請求超時 (毫秒)\n        GEO: env.GEO_API_TIMEOUT, // 地理位置 API 超時 (毫秒)\n    },\n\n    // 重試設定\n    RETRY: {\n        ATTEMPTS: 3, // 重試次數\n        DELAY: 1000, // 重試延遲 (毫秒)\n        EXPONENTIAL_BACKOFF: true, // 指數退避策略\n    },\n\n    // 模式設定\n    USE_MOCK: env.USE_MOCK_API, // Mock API 開關\n    LOGGING: env.API_LOGGING_ENABLED, // API 請求日誌記錄開關\n\n    // API 端點 - Mock 與正式版本統一管理\n    ENDPOINTS: {\n        // Mock API 端點 (Next.js API Routes)\n        MOCK: {\n            LANGUAGE: '/api/ssr/languages', // 語言資料端點\n            LOCALES: '/api/ssr/locales', // 地區設定端點\n            SYSTEM_MENUS: '/api/ssr/system-menus', // 系統選單端點\n            WEB_DATA: '/api/ssr/web-data', // 網站資料端點\n            DETAIL: '/api/ssr/detail', // 詳細資料端點\n        },\n\n        // 正式 API 端點 (外部後端)\n        EXTERNAL: {\n            LANGUAGE: '/api/v1/languages', // 語言資料端點\n            LOCALES: '/api/v1/locales', // 地區設定端點\n            SYSTEM_MENUS: '/api/v1/system-menus', // 系統選單端點\n            WEB_DATA: '/api/v1/web-data', // 網站資料端點\n            DETAIL: '/api/v1/detail', // 詳細資料端點\n        }\n    }\n} as const;"],"names":[],"mappings":";;;AAAA;;AAKO,MAAM,aAAa;IACtB,OAAO;IACP,UAAU,2GAAA,CAAA,MAAG,CAAC,wBAAwB;IACtC,mBAAmB,2GAAA,CAAA,MAAG,CAAC,qBAAqB;IAC5C,cAAc,2GAAA,CAAA,MAAG,CAAC,YAAY;IAE9B,OAAO;IACP,SAAS;QACL,SAAS,2GAAA,CAAA,MAAG,CAAC,WAAW;QACxB,SAAS,2GAAA,CAAA,MAAG,CAAC,mBAAmB;QAChC,KAAK,2GAAA,CAAA,MAAG,CAAC,eAAe;IAC5B;IAEA,OAAO;IACP,OAAO;QACH,UAAU;QACV,OAAO;QACP,qBAAqB;IACzB;IAEA,OAAO;IACP,UAAU,2GAAA,CAAA,MAAG,CAAC,YAAY;IAC1B,SAAS,2GAAA,CAAA,MAAG,CAAC,mBAAmB;IAEhC,0BAA0B;IAC1B,WAAW;QACP,mCAAmC;QACnC,MAAM;YACF,UAAU;YACV,SAAS;YACT,cAAc;YACd,UAAU;YACV,QAAQ;QACZ;QAEA,mBAAmB;QACnB,UAAU;YACN,UAAU;YACV,SAAS;YACT,cAAc;YACd,UAAU;YACV,QAAQ;QACZ;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/config/app.client.config.ts"],"sourcesContent":["import { env } from '@/env.mjs';\n\n/**\n * 應用程式客戶端配置\n * 只包含可在瀏覽器中安全使用的配置\n */\nexport const APP_CONFIG = {\n    // 專案基本資訊\n    PROJECT_NAME: env.PROJECT_CODE, // 專案代碼名稱\n\n    // API 配置 (僅前端可用)\n    API: {\n        BASE_URL: env.NEXT_PUBLIC_API_BASE_URL, // 前端 API 基礎網址\n        TIMEOUT: 30000, // 客戶端預設超時\n    },\n\n    // 功能開關 (僅前端相關)\n    FEATURES: {\n        MULTI_LANGUAGE: env.NEXT_PUBLIC_MULTI_LANGUAGE_ENABLED, // 多語系功能開關\n        DEV_MODE: env.NEXT_PUBLIC_DEV_MODE_ENABLED, // 開發模式開關\n    },\n\n    // 地理位置配置 (僅前端相關)\n    GEO: {\n        DETECTION_STRATEGY: env.NEXT_PUBLIC_GEO_DETECTION_STRATEGY, // 地理位置偵測策略\n        REDIRECT_MODE: env.NEXT_PUBLIC_GEO_REDIRECT_MODE, // 地理重導模式\n        CDN_COUNTRY_HEADER: env.NEXT_PUBLIC_CDN_COUNTRY_HEADER, // CDN 國家標頭名稱\n    },\n\n    // 語系配置 (僅前端相關)\n    LOCALE: {\n        CLIENT_DEFAULT: env.NEXT_PUBLIC_DEFAULT_LOCALE, // 前端預設語系\n        MULTI_LANGUAGE_ENABLED: env.NEXT_PUBLIC_MULTI_LANGUAGE_ENABLED, // 前端多語系功能開關\n    }\n} as const;\n\n// 導出類型\nexport type AppClientConfig = typeof APP_CONFIG;"],"names":[],"mappings":";;;AAAA;;AAMO,MAAM,aAAa;IACtB,SAAS;IACT,cAAc,2GAAA,CAAA,MAAG,CAAC,YAAY;IAE9B,iBAAiB;IACjB,KAAK;QACD,UAAU,2GAAA,CAAA,MAAG,CAAC,wBAAwB;QACtC,SAAS;IACb;IAEA,eAAe;IACf,UAAU;QACN,gBAAgB,2GAAA,CAAA,MAAG,CAAC,kCAAkC;QACtD,UAAU,2GAAA,CAAA,MAAG,CAAC,4BAA4B;IAC9C;IAEA,iBAAiB;IACjB,KAAK;QACD,oBAAoB,2GAAA,CAAA,MAAG,CAAC,kCAAkC;QAC1D,eAAe,2GAAA,CAAA,MAAG,CAAC,6BAA6B;QAChD,oBAAoB,2GAAA,CAAA,MAAG,CAAC,8BAA8B;IAC1D;IAEA,eAAe;IACf,QAAQ;QACJ,gBAAgB,2GAAA,CAAA,MAAG,CAAC,0BAA0B;QAC9C,wBAAwB,2GAAA,CAAA,MAAG,CAAC,kCAAkC;IAClE;AACJ","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/config/app.server.config.ts"],"sourcesContent":["import { env } from '@/env.mjs';\n\n/**\n * 應用程式服務端配置\n * 包含所有服務端專用的配置，包括敏感資訊\n */\nexport const SERVER_APP_CONFIG = {\n    // 專案基本資訊\n    PROJECT_NAME: env.PROJECT_CODE, // 專案代碼名稱\n\n    // API 配置\n    API: {\n        BASE_URL: env.NEXT_PUBLIC_API_BASE_URL, // 前端 API 基礎網址\n        EXTERNAL_URL: env.EXTERNAL_API_BASE_URL, // 外部後端 API 基礎網址\n        TIMEOUT: env.API_TIMEOUT, // 一般 API 請求超時 (毫秒)\n        CONTENT_TIMEOUT: env.CONTENT_API_TIMEOUT, // 內容 API 請求超時 (毫秒)\n        GEO_TIMEOUT: env.GEO_API_TIMEOUT, // 地理位置 API 超時 (毫秒)\n    },\n\n    // 功能開關\n    FEATURES: {\n        INTERNATIONALIZATION: env.INTERNATIONALIZATION_ENABLED, // 國際化功能總開關\n        GEO_DETECTION: env.GEO_DETECTION_ENABLED, // IP 地理偵測功能開關\n        FORCE_REDIRECT: env.FORCE_REDIRECT, // 強制重導開關\n        MULTI_LANGUAGE: env.MULTI_LANGUAGE_ENABLED, // 多語系功能開關\n        MEMBERSHIP: env.MEMBERSHIP_ENABLED, // 會員功能開關\n        CACHE: env.CACHE_ENABLED, // 快取系統總開關\n    },\n\n    // 快取配置\n    CACHE: {\n        ENABLED: env.CACHE_ENABLED, // 快取系統總開關\n        CDN_ENABLED: env.CACHE_CDN_ENABLED, // CDN 快取協作開關\n        STRATEGY: env.I18N_CACHE_STRATEGY, // 國際化快取策略\n        DEFAULT_TTL: env.CACHE_DEFAULT_TTL, // 快取預設生存時間 (秒)\n    },\n\n    // 地理位置配置\n    GEO: {\n        DETECTION_STRATEGY: env.NEXT_PUBLIC_GEO_DETECTION_STRATEGY, // 地理位置偵測策略\n        REDIRECT_MODE: env.NEXT_PUBLIC_GEO_REDIRECT_MODE, // 地理重導模式\n        CDN_COUNTRY_HEADER: env.NEXT_PUBLIC_CDN_COUNTRY_HEADER, // CDN 國家標頭名稱\n        API_PROVIDER: env.GEO_API_PROVIDER, // 地理位置服務提供商\n        API_TIMEOUT: env.GEO_API_TIMEOUT, // 地理位置 API 超時 (毫秒)\n    },\n\n    // Mock 與測試配置\n    MOCK: {\n        USE_MOCK_API: env.USE_MOCK_API, // Mock API 開關\n        API_DELAY: env.MOCK_API_DELAY, // Mock API 延遲模擬 (毫秒)\n        ERROR_ENABLED: env.MOCK_ERROR_ENABLED, // 錯誤模擬開關\n        ERROR_RATE: env.MOCK_ERROR_RATE, // 錯誤模擬機率 (0.0-1.0)\n    },\n\n    // 開發與監控\n    DEV: {\n        API_LOGGING: env.API_LOGGING_ENABLED, // API 請求日誌記錄開關\n        PERFORMANCE_MONITORING: env.PERFORMANCE_MONITORING_ENABLED, // 效能監控開關\n        DEV_MODE: env.NEXT_PUBLIC_DEV_MODE_ENABLED, // 開發模式開關\n    },\n\n    // 語系配置\n    LOCALE: {\n        DEFAULT: env.DEFAULT_LANGUAGE, // 預設語系\n        CLIENT_DEFAULT: env.NEXT_PUBLIC_DEFAULT_LOCALE, // 前端預設語系\n        MULTI_LANGUAGE_ENABLED: env.NEXT_PUBLIC_MULTI_LANGUAGE_ENABLED, // 前端多語系功能開關\n        COUNTRY_SUBDOMAIN_MAP: env.COUNTRY_SUBDOMAIN_MAP, // 國家子網域對應表 (JSON)\n    }\n} as const;\n\n// 導出類型\nexport type ServerAppConfig = typeof SERVER_APP_CONFIG;"],"names":[],"mappings":";;;AAAA;;AAMO,MAAM,oBAAoB;IAC7B,SAAS;IACT,cAAc,2GAAA,CAAA,MAAG,CAAC,YAAY;IAE9B,SAAS;IACT,KAAK;QACD,UAAU,2GAAA,CAAA,MAAG,CAAC,wBAAwB;QACtC,cAAc,2GAAA,CAAA,MAAG,CAAC,qBAAqB;QACvC,SAAS,2GAAA,CAAA,MAAG,CAAC,WAAW;QACxB,iBAAiB,2GAAA,CAAA,MAAG,CAAC,mBAAmB;QACxC,aAAa,2GAAA,CAAA,MAAG,CAAC,eAAe;IACpC;IAEA,OAAO;IACP,UAAU;QACN,sBAAsB,2GAAA,CAAA,MAAG,CAAC,4BAA4B;QACtD,eAAe,2GAAA,CAAA,MAAG,CAAC,qBAAqB;QACxC,gBAAgB,2GAAA,CAAA,MAAG,CAAC,cAAc;QAClC,gBAAgB,2GAAA,CAAA,MAAG,CAAC,sBAAsB;QAC1C,YAAY,2GAAA,CAAA,MAAG,CAAC,kBAAkB;QAClC,OAAO,2GAAA,CAAA,MAAG,CAAC,aAAa;IAC5B;IAEA,OAAO;IACP,OAAO;QACH,SAAS,2GAAA,CAAA,MAAG,CAAC,aAAa;QAC1B,aAAa,2GAAA,CAAA,MAAG,CAAC,iBAAiB;QAClC,UAAU,2GAAA,CAAA,MAAG,CAAC,mBAAmB;QACjC,aAAa,2GAAA,CAAA,MAAG,CAAC,iBAAiB;IACtC;IAEA,SAAS;IACT,KAAK;QACD,oBAAoB,2GAAA,CAAA,MAAG,CAAC,kCAAkC;QAC1D,eAAe,2GAAA,CAAA,MAAG,CAAC,6BAA6B;QAChD,oBAAoB,2GAAA,CAAA,MAAG,CAAC,8BAA8B;QACtD,cAAc,2GAAA,CAAA,MAAG,CAAC,gBAAgB;QAClC,aAAa,2GAAA,CAAA,MAAG,CAAC,eAAe;IACpC;IAEA,aAAa;IACb,MAAM;QACF,cAAc,2GAAA,CAAA,MAAG,CAAC,YAAY;QAC9B,WAAW,2GAAA,CAAA,MAAG,CAAC,cAAc;QAC7B,eAAe,2GAAA,CAAA,MAAG,CAAC,kBAAkB;QACrC,YAAY,2GAAA,CAAA,MAAG,CAAC,eAAe;IACnC;IAEA,QAAQ;IACR,KAAK;QACD,aAAa,2GAAA,CAAA,MAAG,CAAC,mBAAmB;QACpC,wBAAwB,2GAAA,CAAA,MAAG,CAAC,8BAA8B;QAC1D,UAAU,2GAAA,CAAA,MAAG,CAAC,4BAA4B;IAC9C;IAEA,OAAO;IACP,QAAQ;QACJ,SAAS,2GAAA,CAAA,MAAG,CAAC,gBAAgB;QAC7B,gBAAgB,2GAAA,CAAA,MAAG,CAAC,0BAA0B;QAC9C,wBAAwB,2GAAA,CAAA,MAAG,CAAC,kCAAkC;QAC9D,uBAAuB,2GAAA,CAAA,MAAG,CAAC,qBAAqB;IACpD;AACJ","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/config/locale.server.config.ts"],"sourcesContent":["import { env } from '@/env.mjs';\n\n/**\n * 服務端語系配置\n * 只能在服務端使用\n */\nexport const SERVER_LOCALE_CONFIG = {\n    SUPPORTED_LOCALES: env.SUPPORTED_LOCALES.split(',').map((l) => l.trim()),\n    DEFAULT_LOCALE: env.DEFAULT_LANGUAGE,\n    LOCALE_PREFIX_MODE: env.LOCALE_PREFIX_MODE,\n    FALLBACK_LOCALE: 'zh-TW' as const,\n\n    DETECTION: {\n        ENABLED: env.MULTI_LANGUAGE_ENABLED,\n        GEO_ENABLED: env.GEO_DETECTION_ENABLED,\n        CACHE_TTL: 3600,\n    },\n\n    CACHE: {\n        STRATEGY: env.I18N_CACHE_STRATEGY,\n        TTL: 3600,\n    },\n\n    COUNTRY_SUBDOMAIN_MAP: JSON.parse(env.COUNTRY_SUBDOMAIN_MAP),\n\n    // 工具函數\n    isValidLocale: (locale: string): boolean => {\n        return env.SUPPORTED_LOCALES.split(',').map((l) => l.trim()).includes(locale);\n    },\n\n    // 服務端專用函數\n    getSubdomainByCountry: (country: string): string | null => {\n        const map = JSON.parse(env.COUNTRY_SUBDOMAIN_MAP);\n        return map[country] || null;\n    }\n} as const;"],"names":[],"mappings":";;;AAAA;;AAMO,MAAM,uBAAuB;IAChC,mBAAmB,2GAAA,CAAA,MAAG,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;IACrE,gBAAgB,2GAAA,CAAA,MAAG,CAAC,gBAAgB;IACpC,oBAAoB,2GAAA,CAAA,MAAG,CAAC,kBAAkB;IAC1C,iBAAiB;IAEjB,WAAW;QACP,SAAS,2GAAA,CAAA,MAAG,CAAC,sBAAsB;QACnC,aAAa,2GAAA,CAAA,MAAG,CAAC,qBAAqB;QACtC,WAAW;IACf;IAEA,OAAO;QACH,UAAU,2GAAA,CAAA,MAAG,CAAC,mBAAmB;QACjC,KAAK;IACT;IAEA,uBAAuB,KAAK,KAAK,CAAC,2GAAA,CAAA,MAAG,CAAC,qBAAqB;IAE3D,OAAO;IACP,eAAe,CAAC;QACZ,OAAO,2GAAA,CAAA,MAAG,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,IAAI,QAAQ,CAAC;IAC1E;IAEA,UAAU;IACV,uBAAuB,CAAC;QACpB,MAAM,MAAM,KAAK,KAAK,CAAC,2GAAA,CAAA,MAAG,CAAC,qBAAqB;QAChD,OAAO,GAAG,CAAC,QAAQ,IAAI;IAC3B;AACJ","debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/config/locale.client.config.ts"],"sourcesContent":["import { env } from '@/env.mjs';\n\n/**\n * 客戶端語系配置\n * 可以在客戶端和服務端使用\n */\nexport const CLIENT_LOCALE_CONFIG = {\n    SUPPORTED_LOCALES: env.NEXT_PUBLIC_SUPPORTED_LOCALES.split(',').map((l) => l.trim()),\n    DEFAULT_LOCALE: env.NEXT_PUBLIC_DEFAULT_LOCALE,\n    LOCALE_PREFIX_MODE: env.NEXT_PUBLIC_LOCALE_PREFIX_MODE,\n    MULTI_LANGUAGE_ENABLED: env.NEXT_PUBLIC_MULTI_LANGUAGE_ENABLED,\n\n    DETECTION: {\n        STRATEGY: env.NEXT_PUBLIC_GEO_DETECTION_STRATEGY,\n        REDIRECT_MODE: env.NEXT_PUBLIC_GEO_REDIRECT_MODE,\n        CDN_HEADER: env.NEXT_PUBLIC_CDN_COUNTRY_HEADER,\n    },\n\n    // 客戶端工具函數\n    isValidLocale: (locale: string): boolean => {\n        return env.NEXT_PUBLIC_SUPPORTED_LOCALES.split(',').map((l) => l.trim()).includes(locale);\n    }\n} as const;"],"names":[],"mappings":";;;AAAA;;AAMO,MAAM,uBAAuB;IAChC,mBAAmB,2GAAA,CAAA,MAAG,CAAC,6BAA6B,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;IACjF,gBAAgB,2GAAA,CAAA,MAAG,CAAC,0BAA0B;IAC9C,oBAAoB,2GAAA,CAAA,MAAG,CAAC,8BAA8B;IACtD,wBAAwB,2GAAA,CAAA,MAAG,CAAC,kCAAkC;IAE9D,WAAW;QACP,UAAU,2GAAA,CAAA,MAAG,CAAC,kCAAkC;QAChD,eAAe,2GAAA,CAAA,MAAG,CAAC,6BAA6B;QAChD,YAAY,2GAAA,CAAA,MAAG,CAAC,8BAA8B;IAClD;IAEA,UAAU;IACV,eAAe,CAAC;QACZ,OAAO,2GAAA,CAAA,MAAG,CAAC,6BAA6B,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,IAAI,QAAQ,CAAC;IACtF;AACJ","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/config/cache.client.config.ts"],"sourcesContent":["/**\n * 快取系統客戶端配置檔案\n * 只包含客戶端可安全使用的快取配置\n */\n\n/**\n * 快取資料類型定義 - 統一管理所有快取相關設定\n */\nconst CACHE_DATA_TYPES = {\n    LANGUAGES: {\n        ttl: 7200,  // 2小時\n        tags: ['languages', 'static-data'] as string[],\n        description: '語言資料快取'\n    },\n    LOCALES: {\n        ttl: 7200,  // 2小時\n        tags: ['locales', 'static-data'] as string[],\n        description: '地區設定快取'\n    },\n    MENUS: {\n        ttl: 3600,  // 1小時\n        tags: ['menus', 'navigation'] as string[],\n        description: '選單資料快取'\n    },\n    WEB_DATA: {\n        ttl: 3600,  // 1小時\n        tags: ['web-data', 'static-data'] as string[],\n        description: '網站資料快取'\n    },\n    PAGES: {\n        ttl: 1800,  // 30分鐘\n        tags: ['pages', 'content'] as string[],\n        description: '頁面內容快取'\n    },\n    GEO_DATA: {\n        ttl: 1800,  // 30分鐘\n        tags: ['geo-data', 'location'] as string[],\n        description: '地理位置資料快取'\n    },\n    USER_DATA: {\n        ttl: 600,   // 10分鐘\n        tags: ['user-data', 'dynamic-data'] as string[],\n        description: '使用者資料快取'\n    },\n    API_RESPONSE: {\n        ttl: 3600,  // 預設 1小時，服務端會覆蓋\n        tags: ['api-response'] as string[],\n        description: 'API 回應快取'\n    },\n} as const;\n\n/**\n * 客戶端快取配置\n */\nexport const CACHE_CONFIG = {\n    // 基礎配置 (客戶端預設值)\n    ENABLED: true,\n    CDN_ENABLED: false,\n    DEFAULT_TTL: 3600,\n    STRATEGY: 'memory' as const,\n\n    // Redis 配置 (客戶端不使用)\n    REDIS: {\n        PREFIX: 'minmax:',\n        KEY_SEPARATOR: ':',\n    },\n\n    // 從 CACHE_DATA_TYPES 自動生成 TTL 和 TAGS\n    TTL: {\n        LANGUAGES: CACHE_DATA_TYPES.LANGUAGES.ttl,\n        LOCALES: CACHE_DATA_TYPES.LOCALES.ttl,\n        MENUS: CACHE_DATA_TYPES.MENUS.ttl,\n        WEB_DATA: CACHE_DATA_TYPES.WEB_DATA.ttl,\n        PAGES: CACHE_DATA_TYPES.PAGES.ttl,\n        GEO_DATA: CACHE_DATA_TYPES.GEO_DATA.ttl,\n        USER_DATA: CACHE_DATA_TYPES.USER_DATA.ttl,\n        API_RESPONSE: CACHE_DATA_TYPES.API_RESPONSE.ttl,\n    },\n\n    TAGS: {\n        LANGUAGES: CACHE_DATA_TYPES.LANGUAGES.tags,\n        LOCALES: CACHE_DATA_TYPES.LOCALES.tags,\n        MENUS: CACHE_DATA_TYPES.MENUS.tags,\n        WEB_DATA: CACHE_DATA_TYPES.WEB_DATA.tags,\n        PAGES: CACHE_DATA_TYPES.PAGES.tags,\n        GEO_DATA: CACHE_DATA_TYPES.GEO_DATA.tags,\n        USER_DATA: CACHE_DATA_TYPES.USER_DATA.tags,\n        API_RESPONSE: CACHE_DATA_TYPES.API_RESPONSE.tags,\n    },\n\n    // 快取鍵值生成函數\n    generateKey: (type: CacheDataType, identifier: string, locale?: string): string => {\n        const parts = [CACHE_CONFIG.REDIS.PREFIX, type, identifier];\n        if (locale) parts.push(locale);\n        return parts.join(CACHE_CONFIG.REDIS.KEY_SEPARATOR);\n    },\n} as const;\n\n// 輔助函數和類型定義\nexport type CacheDataType = keyof typeof CACHE_DATA_TYPES;\n\n/**\n * 取得指定資料類型的完整配置\n */\nexport function getCacheConfig(type: CacheDataType) {\n    return CACHE_DATA_TYPES[type];\n}\n\n/**\n * 取得指定資料類型的 TTL (毫秒)\n */\nexport function getCacheTTL(type: CacheDataType): number {\n    return CACHE_DATA_TYPES[type].ttl * 1000;\n}\n\n/**\n * 取得指定資料類型的標籤\n */\nexport function getCacheTags(type: CacheDataType): string[] {\n    return CACHE_DATA_TYPES[type].tags;\n}\n\n/**\n * 根據標籤找到相關的資料類型\n */\nexport function getDataTypesByTag(tag: string): CacheDataType[] {\n    return Object.entries(CACHE_DATA_TYPES)\n        .filter(([_, config]) => config.tags.includes(tag))\n        .map(([key]) => key as CacheDataType);\n}\n\n/**\n * 取得所有可用的標籤\n */\nexport function getAllCacheTags(): string[] {\n    const allTags = Object.values(CACHE_DATA_TYPES).flatMap(config => config.tags);\n    return [...new Set(allTags)];\n}\n\n/**\n * 取得快取配置摘要 (用於除錯)\n */\nexport function getCacheConfigSummary() {\n    return Object.entries(CACHE_DATA_TYPES).map(([type, config]) => ({\n        type,\n        ttl: `${config.ttl}s (${config.ttl / 60}min)`,\n        tags: config.tags.join(', '),\n        description: config.description\n    }));\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/config/cache.server.config.ts"],"sourcesContent":["/**\n * 快取系統服務端配置檔案\n * 包含完整的快取配置，包括環境變數\n */\n\nimport { env } from '@/env.mjs';\nimport {\n    getCacheConfig,\n    getCacheTTL,\n    getCacheTags,\n    getDataTypesByTag,\n    getAllCacheTags,\n    getCacheConfigSummary,\n    type CacheDataType\n} from './cache.client.config';\n\n/**\n * 快取資料類型定義 - 統一管理所有快取相關設定\n */\nconst SERVER_CACHE_DATA_TYPES = {\n    LANGUAGES: {\n        ttl: 7200,  // 2小時\n        tags: ['languages', 'static-data'] as string[],\n        description: '語言資料快取'\n    },\n    LOCALES: {\n        ttl: 7200,  // 2小時\n        tags: ['locales', 'static-data'] as string[],\n        description: '地區設定快取'\n    },\n    MENUS: {\n        ttl: 3600,  // 1小時\n        tags: ['menus', 'navigation'] as string[],\n        description: '選單資料快取'\n    },\n    WEB_DATA: {\n        ttl: 3600,  // 1小時\n        tags: ['web-data', 'static-data'] as string[],\n        description: '網站資料快取'\n    },\n    PAGES: {\n        ttl: 1800,  // 30分鐘\n        tags: ['pages', 'content'] as string[],\n        description: '頁面內容快取'\n    },\n    GEO_DATA: {\n        ttl: 1800,  // 30分鐘\n        tags: ['geo-data', 'location'] as string[],\n        description: '地理位置資料快取'\n    },\n    USER_DATA: {\n        ttl: 600,   // 10分鐘\n        tags: ['user-data', 'dynamic-data'] as string[],\n        description: '使用者資料快取'\n    },\n    API_RESPONSE: {\n        ttl: env.CACHE_DEFAULT_TTL,\n        tags: ['api-response'] as string[],\n        description: 'API 回應快取'\n    },\n} as const;\n\n/**\n * 服務端快取配置\n */\nexport const SERVER_CACHE_CONFIG = {\n    // 基礎配置 (從環境變數讀取)\n    ENABLED: env.CACHE_ENABLED,\n    CDN_ENABLED: env.CACHE_CDN_ENABLED,\n    DEFAULT_TTL: env.CACHE_DEFAULT_TTL,\n    STRATEGY: env.I18N_CACHE_STRATEGY,\n\n    // Redis 配置\n    REDIS: {\n        URL: undefined, // 可以從環境變數添加\n        PREFIX: 'minmax:',\n        KEY_SEPARATOR: ':',\n    },\n\n    // 從 SERVER_CACHE_DATA_TYPES 自動生成 TTL 和 TAGS\n    TTL: {\n        LANGUAGES: SERVER_CACHE_DATA_TYPES.LANGUAGES.ttl,\n        LOCALES: SERVER_CACHE_DATA_TYPES.LOCALES.ttl,\n        MENUS: SERVER_CACHE_DATA_TYPES.MENUS.ttl,\n        WEB_DATA: SERVER_CACHE_DATA_TYPES.WEB_DATA.ttl,\n        PAGES: SERVER_CACHE_DATA_TYPES.PAGES.ttl,\n        GEO_DATA: SERVER_CACHE_DATA_TYPES.GEO_DATA.ttl,\n        USER_DATA: SERVER_CACHE_DATA_TYPES.USER_DATA.ttl,\n        API_RESPONSE: SERVER_CACHE_DATA_TYPES.API_RESPONSE.ttl,\n    },\n\n    TAGS: {\n        LANGUAGES: SERVER_CACHE_DATA_TYPES.LANGUAGES.tags,\n        LOCALES: SERVER_CACHE_DATA_TYPES.LOCALES.tags,\n        MENUS: SERVER_CACHE_DATA_TYPES.MENUS.tags,\n        WEB_DATA: SERVER_CACHE_DATA_TYPES.WEB_DATA.tags,\n        PAGES: SERVER_CACHE_DATA_TYPES.PAGES.tags,\n        GEO_DATA: SERVER_CACHE_DATA_TYPES.GEO_DATA.tags,\n        USER_DATA: SERVER_CACHE_DATA_TYPES.USER_DATA.tags,\n        API_RESPONSE: SERVER_CACHE_DATA_TYPES.API_RESPONSE.tags,\n    },\n\n    // 快取鍵值生成函數\n    generateKey: (type: CacheDataType, identifier: string, locale?: string): string => {\n        const parts = [SERVER_CACHE_CONFIG.REDIS.PREFIX, type, identifier];\n        if (locale) parts.push(locale);\n        return parts.join(SERVER_CACHE_CONFIG.REDIS.KEY_SEPARATOR);\n    },\n} as const;\n\n// 重新導出客戶端的輔助函數，讓服務端也能使用\nexport {\n    getCacheConfig,\n    getCacheTTL,\n    getCacheTags,\n    getDataTypesByTag,\n    getAllCacheTags,\n    getCacheConfigSummary,\n    type CacheDataType\n};\n\n// 服務端專用的輔助函數\n/**\n * 取得服務端指定資料類型的完整配置\n */\nexport function getServerCacheConfig(type: CacheDataType) {\n    return SERVER_CACHE_DATA_TYPES[type];\n}\n\n/**\n * 取得服務端指定資料類型的 TTL (毫秒)\n */\nexport function getServerCacheTTL(type: CacheDataType): number {\n    return SERVER_CACHE_DATA_TYPES[type].ttl * 1000;\n}\n\n/**\n * 取得服務端指定資料類型的標籤\n */\nexport function getServerCacheTags(type: CacheDataType): string[] {\n    return SERVER_CACHE_DATA_TYPES[type].tags;\n}\n\n/**\n * 取得服務端快取配置摘要 (用於除錯)\n */\nexport function getServerCacheConfigSummary() {\n    return Object.entries(SERVER_CACHE_DATA_TYPES).map(([type, config]) => ({\n        type,\n        ttl: `${config.ttl}s (${config.ttl / 60}min)`,\n        tags: config.tags.join(', '),\n        description: config.description\n    }));\n}\n\n// 導出類型\nexport type ServerCacheConfig = typeof SERVER_CACHE_CONFIG;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/config/index.ts"],"sourcesContent":["/**\n * 統一配置導出\n * 整合所有配置相關的設定\n */\n\n// 導出環境變數配置\n// export { env } from '../env.mjs';\n\n// 導出 API 配置\nexport * from './api.config';\n\n// 導出應用程式配置\nexport * from './app.client.config';\nexport * from './app.server.config';\n\n// 導出語系配置\nexport * from './locale.server.config';\nexport * from './locale.client.config';\n\n// 導出快取配置\nexport * from './cache.client.config';\nexport * from './cache.server.config';"],"names":[],"mappings":"AAAA;;;CAGC,GAED,WAAW;AACX,oCAAoC;AAEpC,YAAY;;AACZ;AAEA,WAAW;AACX;AACA;AAEA,SAAS;AACT;AACA;AAEA,SAAS;AACT;AACA","debugId":null}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/i18n/routing.ts"],"sourcesContent":["import { defineRouting } from 'next-intl/routing';\nimport { SERVER_LOCALE_CONFIG } from '@/config/';\n\nexport const routing = defineRouting({\n    // 支援的語系 - 從環境變數讀取，會被 API 動態覆蓋\n    locales: SERVER_LOCALE_CONFIG.SUPPORTED_LOCALES as [string, ...string[]],\n\n    // 預設語系 - 從環境變數讀取，會被 API 動態覆蓋\n    defaultLocale: SERVER_LOCALE_CONFIG.DEFAULT_LOCALE,\n\n    // 語系前綴模式 - 從環境變數讀取\n    localePrefix: SERVER_LOCALE_CONFIG.LOCALE_PREFIX_MODE,\n\n    // 啟用語系檢測 - 從環境變數讀取\n    localeDetection: SERVER_LOCALE_CONFIG.DETECTION.ENABLED\n});"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,MAAM,UAAU,CAAA,GAAA,kOAAA,CAAA,gBAAa,AAAD,EAAE;IACjC,8BAA8B;IAC9B,SAAS,2IAAA,CAAA,uBAAoB,CAAC,iBAAiB;IAE/C,6BAA6B;IAC7B,eAAe,2IAAA,CAAA,uBAAoB,CAAC,cAAc;IAElD,mBAAmB;IACnB,cAAc,2IAAA,CAAA,uBAAoB,CAAC,kBAAkB;IAErD,mBAAmB;IACnB,iBAAiB,2IAAA,CAAA,uBAAoB,CAAC,SAAS,CAAC,OAAO;AAC3D","debugId":null}},
    {"offset": {"line": 769, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/i18n/navigation.ts"],"sourcesContent":["import {createNavigation} from 'next-intl/navigation';\nimport {routing} from './routing';\n\n//這是在 Next.js 導航 API 基礎上，考量到路由設定的輕量級封裝。\nexport const {Link, redirect, usePathname, useRouter, getPathname} =\n    createNavigation(routing);\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;AAGO,MAAM,EAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC,GAC9D,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE,sHAAA,CAAA,UAAO","debugId":null}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/lib/locale-utils.ts"],"sourcesContent":["import { routing } from '@/i18n/routing';\n\n/**\n * 移除路徑中的語系前綴，取得基底路徑\n * @param pathname - 當前路徑 (例如: /en/about 或 /about)\n * @returns 不含語系前綴的基底路徑 (例如: /about)\n */\nexport function getBasePathWithoutLocale(pathname: string): string {\n    const parts = pathname.split('/').filter(Boolean);\n    const first = parts[0];\n\n    // 檢查第一段是否為支援的語系\n    const hasLocalePrefix = !!first && routing.locales.includes(first as any);\n\n    // 移除語系前綴\n    const withoutLocale = hasLocalePrefix ? parts.slice(1) : parts;\n    const path = `/${withoutLocale.join('/')}`;\n\n    return path === '' ? '/' : path;\n}\n\n/**\n * 檢查路徑是否包含語系前綴\n * @param pathname - 當前路徑\n * @returns 是否包含語系前綴\n */\nexport function hasLocalePrefix(pathname: string): boolean {\n    const parts = pathname.split('/').filter(Boolean);\n    const first = parts[0];\n    return !!first && routing.locales.includes(first as any);\n}\n\n/**\n * 將查詢參數附加到路徑上\n * @param path - 基底路徑\n * @param searchParams - URLSearchParams 物件\n * @returns 包含查詢參數的完整路徑\n */\nexport function appendSearchParams(path: string, searchParams?: URLSearchParams | null): string {\n    const qsString = searchParams?.toString();\n    return qsString ? `${path}?${qsString}` : path;\n}\n\n/**\n * 為語系切換器準備 href\n * 整合路徑處理和查詢參數邏輯\n * @param pathname - 當前路徑\n * @param searchParams - 查詢參數\n * @returns 處理後的 href\n */\nexport function prepareLanguageSwitcherHref(pathname: string, searchParams?: URLSearchParams | null): string {\n    const basePath = getBasePathWithoutLocale(pathname);\n    return appendSearchParams(basePath, searchParams);\n}"],"names":[],"mappings":";;;;;;AAAA;;AAOO,SAAS,yBAAyB,QAAgB;IACrD,MAAM,QAAQ,SAAS,KAAK,CAAC,KAAK,MAAM,CAAC;IACzC,MAAM,QAAQ,KAAK,CAAC,EAAE;IAEtB,gBAAgB;IAChB,MAAM,kBAAkB,CAAC,CAAC,SAAS,sHAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;IAE5D,SAAS;IACT,MAAM,gBAAgB,kBAAkB,MAAM,KAAK,CAAC,KAAK;IACzD,MAAM,OAAO,CAAC,CAAC,EAAE,cAAc,IAAI,CAAC,MAAM;IAE1C,OAAO,SAAS,KAAK,MAAM;AAC/B;AAOO,SAAS,gBAAgB,QAAgB;IAC5C,MAAM,QAAQ,SAAS,KAAK,CAAC,KAAK,MAAM,CAAC;IACzC,MAAM,QAAQ,KAAK,CAAC,EAAE;IACtB,OAAO,CAAC,CAAC,SAAS,sHAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;AAC/C;AAQO,SAAS,mBAAmB,IAAY,EAAE,YAAqC;IAClF,MAAM,WAAW,cAAc;IAC/B,OAAO,WAAW,GAAG,KAAK,CAAC,EAAE,UAAU,GAAG;AAC9C;AASO,SAAS,4BAA4B,QAAgB,EAAE,YAAqC;IAC/F,MAAM,WAAW,yBAAyB;IAC1C,OAAO,mBAAmB,UAAU;AACxC","debugId":null}},
    {"offset": {"line": 820, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/features/language/components/LanguageSwitcher.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport type { Language } from '@/types';\nimport { Link } from '@/i18n/navigation';\nimport { routing } from '@/i18n/routing';\nimport { prepareLanguageSwitcherHref } from '@/lib/locale-utils';\nimport type { ReadonlyURLSearchParams } from 'next/navigation';\n\ntype LanguageSwitcherProps = {\n    /** 自定義 CSS 類名，便於外部控制排版與間距 */\n    className?: string;\n    /** 可用語言清單（來源應與系統支援語系一致） */\n    languages: Language[];\n    /** 目前頁面的語系 ID（例如：'zh-TW'、'en'） */\n    currentLocale: string;\n    /** 目前路徑（不含網域），建議為「不含 locale 前綴」的語系無關路徑 */\n    pathname: string;\n    /** 目前 URL 的查詢參數集合（唯讀），切換語系時保留 */\n    searchParams: ReadonlyURLSearchParams | null;\n    /** 是否顯示語言標籤（預設顯示），可用於僅顯示國旗或圖示的場合 */\n    showLabels?: boolean;\n    /** 是否顯示語言圖示（預設顯示） */\n    showIcons?: boolean;\n    /** 顯示樣式：下拉選單或內聯列表（預設為內聯列表） */\n    variant?: 'dropdown' | 'inline';\n    /** 是否顯示預設語言標記（預設隱藏） */\n    showDefaultBadge?: boolean;\n};\n\n/**\n * 語言切換器 LanguageSwitcher\n *\n * 設計重點：\n * - 無障礙：使用 aria-* 提供更清楚的語意；目前語言不提供連結避免誤點\n * - SEO：切換連結帶上 lang/hrefLang，頁面 head 的 hreflang 請另由 metadata 產生\n * - 路徑保留：切換語系時保留當前 pathname 與 searchParams\n * - 擴充性：提供 dropdown/inline 兩種模式；dropdown 尚可擴充鍵盤導覽與彈出選單\n */\nexport default function LanguageSwitcher({\n         className,\n         languages,\n         currentLocale,\n         pathname,\n         searchParams,\n         showLabels = true,\n         showIcons = false,\n         variant = 'inline',\n         showDefaultBadge = false\n     }: LanguageSwitcherProps) {\n    // 基礎資料檢查：若語系列表為空\n    if (!languages || languages.length === 0) {\n        // 開發環境下提示，協助定位資料注入問題\n        if (process.env.NODE_ENV === 'development') {\n            return (\n                <div className={className}>\n                    <span className=\"text-red-500 text-sm\">⚠️ 無語系資料</span>\n                </div>\n            );\n        }\n        // 生產環境直接不渲染，避免影響版面\n        return null;\n    }\n\n    // 取得目前語系對應的語言物件（用於顯示圖示或標籤）\n    const currentLanguage = languages.find((lang) => lang.id === currentLocale);\n\n    return (\n        // nav 容器：指定 aria-label，協助讀屏器辨識此導覽區塊用途\n        <nav className={className} aria-label=\"Language switcher\">\n            {variant === 'dropdown' ? (\n                // 下拉模式：目前僅示範按鈕，尚未加入彈出選單與鍵盤操作\n                <div className=\"relative\">\n                    <button\n                        className=\"inline-flex items-center gap-2 rounded px-3 py-1 text-sm bg-gray-100 text-gray-800 hover:bg-gray-200\"\n                        // 尚未開啟，下拉內容會對應 aria-expanded 與 aria-controls\n                        aria-expanded=\"false\"\n                        // 表示將會打開 menu 類型的彈出內容\n                        aria-haspopup=\"menu\"\n                        // 讀屏器描述目前語言\n                        aria-label={`Current language: ${currentLanguage?.native || currentLanguage?.title}`}\n                    >\n                        {/* 語言圖示（若有且開啟顯示） */}\n                        {showIcons && currentLanguage?.icon && (\n                            <span aria-hidden=\"true\" className={`${currentLanguage.icon} inline-block h-4 w-4`} />\n                        )}\n                        {/* 顯示語言名稱（優先原生名稱，否則使用英文名稱） */}\n                        {showLabels && <span>{currentLanguage?.native || currentLanguage?.title}</span>}\n\n                        {/* 下拉箭頭圖示（裝飾性，對讀屏器隱藏） */}\n                        <svg className=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                    </button>\n                    {/* TODO：在此加入彈出式選單內容（role=\"menu\"、menuitem、鍵盤導覽、焦點管理等） */}\n                </div>\n            ) : (\n                // 內聯模式：直接列出所有可切換的語言\n                <ul className=\"flex flex-wrap items-center gap-2\">\n                    {languages.map((lang) => {\n                        // 顯示標籤：優先顯示原生語言名稱\n                        const label = lang.native || lang.title;\n                        // 產生「語系無關」的 href，以便由 Link 的 locale 屬性插入目標語系\n                        const href = prepareLanguageSwitcherHref(pathname, searchParams);\n                        // 是否為當前語言\n                        const active = currentLocale === lang.id;\n\n                        return (\n                            <li key={lang.id}>\n                                {active ? (\n                                    // 當前語言：不渲染為連結，避免重整同頁與誤點\n                                    <span\n                                        className=\"inline-flex items-center gap-2 rounded px-3 py-1 text-sm bg-blue-600 text-white cursor-default\"\n                                        // 指示目前所處頁面語言\n                                        aria-current=\"page\"\n                                        aria-label={`Current language: ${label}`}\n                                    >\n                                        {/* 語言圖示（裝飾性，可控制顯示） */}\n                                        {showIcons && lang.icon && <span aria-hidden=\"true\" className={`${lang.icon} inline-block h-4 w-4`} />}\n                                        {/* 語言標籤（可關閉） */}\n                                        {showLabels && <span>{label}</span>}\n                                        {/* 預設語言的輔助標記（若為系統預設語言且開啟顯示） */}\n                                        {showDefaultBadge && lang.default && (\n                                            <span\n                                                className=\"ml-1 rounded bg-blue-500/20 px-1.5 py-0.5 text-[10px]\"\n                                                aria-label=\"Default language\"\n                                            >\n                                                default\n                                            </span>\n                                        )}\n                                        {/* 給讀屏器的額外提示（視覺隱藏） */}\n                                        <span className=\"sr-only\">(current)</span>\n                                    </span>\n                                ) : (\n                                    // 其他語言：渲染為可點擊的 Link，交由 Link 的 locale 屬性切換語系\n                                    <Link\n                                        href={href}\n                                        // 透過 locale 指定目標語系；型別上收斂為 routing.locales 的成員\n                                        locale={lang.id as (typeof routing.locales)[number]}\n                                        className=\"inline-flex items-center gap-2 rounded px-3 py-1 text-sm transition-colors bg-gray-100 text-gray-800 hover:bg-gray-200 focus:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n                                        // 讀屏器說明：切換到某語言（若有原生名稱則一併說明）\n                                        aria-label={`Switch to ${lang.title}${lang.native ? ` (${lang.native})` : ''}`}\n                                        // 滑鼠提示：與 aria-label 保持一致\n                                        title={`${lang.title}${lang.native ? ` (${lang.native})` : ''}`}\n                                        // SEO 輔助：標示此連結目標的語言（可留可不留，hreflang 正式應放在 head alternates）\n                                        hrefLang={lang.id}\n                                        // HTML 語言屬性，輔助正確渲染語言特性\n                                        lang={lang.id}\n                                    >\n                                        {/* 語言圖示（可控制顯示） */}\n                                        {showIcons && lang.icon && <span aria-hidden=\"true\" className={`${lang.icon} inline-block h-4 w-4`} />}\n                                        {/* 語言標籤 */}\n                                        {showLabels && <span>{label}</span>}\n                                        {/* 預設語言標記（展示用，實際決策以系統設定為準，預設隱藏） */}\n                                        {showDefaultBadge && lang.default && (\n                                            <span\n                                                className=\"ml-1 rounded bg-blue-500/20 px-1.5 py-0.5 text-[10px]\"\n                                                aria-label=\"Default language\"\n                                            >\n                                                default\n                                            </span>\n                                        )}\n                                    </Link>\n                                )}\n                            </li>\n                        );\n                    })}\n                </ul>\n            )}\n        </nav>\n    );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1039, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/features/language/hooks/useLanguageSwitcher.ts"],"sourcesContent":["'use client';\n\nimport { usePathname, useSearchParams } from 'next/navigation';\nimport { useLocale } from 'next-intl';\nimport { useState, useEffect } from 'react';\nimport type { Language } from '@/types';\n\n/**\n * 語言切換器相關資料的自定義 Hook\n */\nexport function useLanguageSwitcher() {\n    // 取得當前路徑，用於生成語言切換連結\n    const pathname = usePathname() || '/';\n    // 取得當前語系\n    const currentLocale = useLocale();\n    // 取得 URL 查詢參數，用於保持切換語言時的參數\n    const searchParams = useSearchParams();\n\n    // 語言列表狀態\n    const [languages, setLanguages] = useState<Language[]>([]);\n    // 載入狀態\n    const [isLoading, setIsLoading] = useState(true);\n    // 錯誤狀態\n    const [error, setError] = useState<string | null>(null);\n\n    // 載入語言列表\n    useEffect(() => {\n        let isMounted = true;\n\n        const loadLanguages = async () => {\n            try {\n                setIsLoading(true);\n                setError(null);\n\n                // 使用客戶端 API 路由來獲取語言列表\n                const response = await fetch('/api/languages');\n                if (!response.ok) {\n                    throw new Error('Failed to fetch languages');\n                }\n                const languageList = await response.json();\n\n                if (isMounted) {\n                    setLanguages(languageList);\n                }\n            } catch (err) {\n                if (isMounted) {\n                    setError(err instanceof Error ? err.message : '載入語言列表失敗');\n                    console.error('Failed to load languages:', err);\n                }\n            } finally {\n                if (isMounted) {\n                    setIsLoading(false);\n                }\n            }\n        };\n\n        loadLanguages();\n\n        return () => {\n            isMounted = false;\n        };\n    }, []);\n\n    return {\n        pathname,\n        currentLocale,\n        searchParams,\n        languages,\n        isLoading,\n        error,\n    };\n}"],"names":[],"mappings":";;;AAEA;AACA;AACA;AAJA;;;;AAUO,SAAS;IACZ,oBAAoB;IACpB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD,OAAO;IAClC,SAAS;IACT,MAAM,gBAAgB,CAAA,GAAA,kKAAA,CAAA,YAAS,AAAD;IAC9B,2BAA2B;IAC3B,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IAEnC,SAAS;IACT,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,OAAO;IACP,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,OAAO;IACP,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,SAAS;IACT,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,YAAY;QAEhB,MAAM,gBAAgB;YAClB,IAAI;gBACA,aAAa;gBACb,SAAS;gBAET,sBAAsB;gBACtB,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBACd,MAAM,IAAI,MAAM;gBACpB;gBACA,MAAM,eAAe,MAAM,SAAS,IAAI;gBAExC,IAAI,WAAW;oBACX,aAAa;gBACjB;YACJ,EAAE,OAAO,KAAK;gBACV,IAAI,WAAW;oBACX,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;oBAC9C,QAAQ,KAAK,CAAC,6BAA6B;gBAC/C;YACJ,SAAU;gBACN,IAAI,WAAW;oBACX,aAAa;gBACjB;YACJ;QACJ;QAEA;QAEA,OAAO;YACH,YAAY;QAChB;IACJ,GAAG,EAAE;IAEL,OAAO;QACH;QACA;QACA;QACA;QACA;QACA;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 1107, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/features/language/hooks/index.ts"],"sourcesContent":["export { useLanguageSwitcher } from './useLanguageSwitcher';"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 1121, "column": 0}, "map": {"version":3,"sources":["file:///Users/jean/Documents/GitHub/next-minmax/src/features/language/components/LanguageSwitcherContainer.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useLanguageSwitcher } from '../hooks';\nimport LanguageSwitcher from './LanguageSwitcher';\nimport type { Language } from '@/types';\n\n/**\n * 語言切換器容器組件\n *\n * 自動處理資料載入和狀態管理的語言切換器包裝組件\n */\ntype LanguageSwitcherContainerProps = {\n    /** 自定義 CSS 類名 */\n    className?: string;\n    /** 是否顯示語言標籤文字，預設為 true */\n    showLabels?: boolean;\n    /** 顯示變體：下拉選單或內聯列表，預設為 'inline' */\n    variant?: 'dropdown' | 'inline';\n    /** 載入中的顯示內容 */\n    loadingComponent?: React.ReactNode;\n    /** 錯誤時的顯示內容 */\n    errorComponent?: React.ReactNode;\n    /** 可選的語言資料，如果提供則不會重新載入 */\n    languages?: Language[];\n};\n\nexport default function LanguageSwitcherContainer({\n                                                      className,\n                                                      showLabels = true,\n                                                      variant = 'inline',\n                                                      loadingComponent,\n                                                      errorComponent,\n                                                      languages: providedLanguages,\n                                                  }: LanguageSwitcherContainerProps) {\n    const {\n        pathname,\n        currentLocale,\n        searchParams,\n        languages: hookLanguages,\n        isLoading,\n        error,\n    } = useLanguageSwitcher();\n\n    // 如果有提供語言資料，就使用提供的，否則使用 hook 載入的\n    const languages = providedLanguages || hookLanguages;\n    const shouldShowLoading = !providedLanguages && isLoading;\n    const shouldShowError = !providedLanguages && error;\n\n    // 載入中狀態\n    if (shouldShowLoading) {\n        return loadingComponent || (\n            <div className={className}>\n                <span className=\"text-gray-500 text-sm\">載入語言選項...</span>\n            </div>\n        );\n    }\n\n    // 錯誤狀態\n    if (shouldShowError) {\n        return errorComponent || (\n            <div className={className}>\n                <span className=\"text-red-500 text-sm\">⚠️ {error}</span>\n            </div>\n        );\n    }\n\n    // 正常渲染\n    return (\n        <LanguageSwitcher\n            className={className}\n            languages={languages}\n            currentLocale={currentLocale}\n            pathname={pathname}\n            searchParams={searchParams}\n            showLabels={showLabels}\n            variant={variant}\n        />\n    );\n}"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAJA;;;;AA2Be,SAAS,0BAA0B,EACI,SAAS,EACT,aAAa,IAAI,EACjB,UAAU,QAAQ,EAClB,gBAAgB,EAChB,cAAc,EACd,WAAW,iBAAiB,EACC;IAC/E,MAAM,EACF,QAAQ,EACR,aAAa,EACb,YAAY,EACZ,WAAW,aAAa,EACxB,SAAS,EACT,KAAK,EACR,GAAG,CAAA,GAAA,2JAAA,CAAA,sBAAmB,AAAD;IAEtB,iCAAiC;IACjC,MAAM,YAAY,qBAAqB;IACvC,MAAM,oBAAoB,CAAC,qBAAqB;IAChD,MAAM,kBAAkB,CAAC,qBAAqB;IAE9C,QAAQ;IACR,IAAI,mBAAmB;QACnB,OAAO,kCACH,8OAAC;YAAI,WAAW;sBACZ,cAAA,8OAAC;gBAAK,WAAU;0BAAwB;;;;;;;;;;;IAGpD;IAEA,OAAO;IACP,IAAI,iBAAiB;QACjB,OAAO,gCACH,8OAAC;YAAI,WAAW;sBACZ,cAAA,8OAAC;gBAAK,WAAU;;oBAAuB;oBAAI;;;;;;;;;;;;IAGvD;IAEA,OAAO;IACP,qBACI,8OAAC,8JAAA,CAAA,UAAgB;QACb,WAAW;QACX,WAAW;QACX,eAAe;QACf,UAAU;QACV,cAAc;QACd,YAAY;QACZ,SAAS;;;;;;AAGrB","debugId":null}}]
}