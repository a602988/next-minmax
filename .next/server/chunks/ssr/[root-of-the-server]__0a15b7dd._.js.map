{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/i18n/request.ts"],"sourcesContent":["/**\n * Next.js 國際化請求配置\n * \n * 處理流程：\n * 1. 使用者訪問帶有語言參數的路由 (例如: /zh/about, /en/about)\n * 2. Next.js 從 URL 路由段中提取語言識別碼\n * 3. 驗證語言識別碼是否在支援的語言清單中\n * 4. 動態載入對應的語言資源檔案\n * 5. 將語言配置和翻譯資源提供給應用程式\n */\n\nimport {getRequestConfig} from 'next-intl/server'; // Next.js 國際化請求配置工廠函數\nimport {hasLocale} from 'next-intl'; // 語言識別碼驗證工具函數\nimport {routing} from './routing'; // 路由配置模組，包含支援語言清單和預設語言\n\nexport default getRequestConfig(async ({requestLocale}) => {\n    // 取得請求中的語言識別碼 (對應 [locale] 動態路由段)\n    // 使用 await 處理可能的異步語言識別碼解析\n    const requested = await requestLocale;\n    \n    // 語言識別碼驗證與回退策略\n    // 若請求的語言在支援清單中則使用該語言，否則回退至預設語言\n    const locale = hasLocale(routing.locales, requested)\n        ? requested\n        : routing.defaultLocale;\n\n    // 回傳國際化配置物件\n    return {\n        locale, // 最終確定的語言識別碼\n        messages: (await import(`../../messages/${locale}.json`)).default // 動態載入語言資源檔案\n    };\n});\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC;;;AAED,ubAAmD,sBAAsB;AACzE,iTAAqC,cAAc;AACnD,8MAAmC,uBAAuB;;;;uCAE3C,CAAA,GAAA,0PAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,EAAC,aAAa,EAAC;IAClD,kCAAkC;IAClC,0BAA0B;IAC1B,MAAM,YAAY,MAAM;IAExB,eAAe;IACf,+BAA+B;IAC/B,MAAM,SAAS,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,sHAAA,CAAA,UAAO,CAAC,OAAO,EAAE,aACpC,YACA,sHAAA,CAAA,UAAO,CAAC,aAAa;IAE3B,YAAY;IACZ,OAAO;QACH;QACA,UAAU,CAAC;;;;;;;;;;;;;;;;;kBAAa,CAAC,eAAe,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,aAAa;IACnF;AACJ","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/i18n/navigation.ts"],"sourcesContent":["import {createNavigation} from 'next-intl/navigation';\nimport {routing} from './routing';\n\n//這是在 Next.js 導航 API 基礎上，考量到路由設定的輕量級封裝。\nexport const {Link, redirect, usePathname, useRouter, getPathname} =\n    createNavigation(routing);\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;AAGO,MAAM,EAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAC,GAC9D,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE,sHAAA,CAAA,UAAO","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/app/%5Blocale%5D/page.tsx"],"sourcesContent":["import {useTranslations} from 'next-intl';\nimport {Link} from '@/i18n/navigation';\n\nexport default function HomePage() {\n    const t = useTranslations('navigation');\n    return (\n        <nav className=\"flex gap-3\">\n            <Link href=\"/\">{t('home')}</Link>\n            <Link href=\"/about\">{t('about')}</Link>\n            <Link href=\"/contact\">{t('contact')}</Link>\n        </nav>\n    );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACpB,MAAM,IAAI,CAAA,GAAA,8OAAA,CAAA,kBAAe,AAAD,EAAE;IAC1B,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC,yHAAA,CAAA,OAAI;gBAAC,MAAK;0BAAK,EAAE;;;;;;0BAClB,8OAAC,yHAAA,CAAA,OAAI;gBAAC,MAAK;0BAAU,EAAE;;;;;;0BACvB,8OAAC,yHAAA,CAAA,OAAI;gBAAC,MAAK;0BAAY,EAAE;;;;;;;;;;;;AAGrC","debugId":null}}]
}