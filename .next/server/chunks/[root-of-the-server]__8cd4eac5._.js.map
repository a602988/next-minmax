{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/app/api/ssr/_data/languages.data.ts"],"sourcesContent":["export const languagesData = {\n  code: \"0000\",\n  message: \"成功\",\n  data: [\n      {\n          \"id\": \"zh-TW\",\n          \"title\": \"中文(繁體)\",\n          \"native\": \"TW\",\n          \"icon\": \"flag-icon-tw\",\n          \"default\": true\n      },\n      {\n          \"id\": \"zh-CN\",\n          \"title\": \"中文（簡體）\",\n          \"native\": \"CN\",\n          \"icon\": \"flag-icon-cn\",\n          \"default\": false\n      },\n      {\n          \"id\": \"en\",\n          \"title\": \"English\",\n          \"native\": \"EN\",\n          \"icon\": \"flag-icon-us\",\n          \"default\": false\n      },\n      {\n          \"id\": \"ja\",\n          \"title\": \"日文\",\n          \"native\": \"JA\",\n          \"icon\": \"flag-icon-ja\",\n          \"default\": false\n      }\n  ]\n};"],"names":[],"mappings":";;;AAAO,MAAM,gBAAgB;IAC3B,MAAM;IACN,SAAS;IACT,MAAM;QACF;YACI,MAAM;YACN,SAAS;YACT,UAAU;YACV,QAAQ;YACR,WAAW;QACf;QACA;YACI,MAAM;YACN,SAAS;YACT,UAAU;YACV,QAAQ;YACR,WAAW;QACf;QACA;YACI,MAAM;YACN,SAAS;YACT,UAAU;YACV,QAAQ;YACR,WAAW;QACf;QACA;YACI,MAAM;YACN,SAAS;YACT,UAAU;YACV,QAAQ;YACR,WAAW;QACf;KACH;AACH","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/i18n/routing.ts"],"sourcesContent":["import { defineRouting } from 'next-intl/routing';\n\nexport const routing = defineRouting({\n  // 支援的語系 - 這個會被 API 動態覆蓋\n  locales: ['zh-TW', 'zh-CN', 'en', 'ja'],\n  \n  // 預設語系 - 這個也會被 API 動態覆蓋\n  defaultLocale: 'zh-TW',\n  \n  // 預設語系不加前綴\n  localePrefix: 'as-needed',\n  \n  // 啟用語系檢測\n  localeDetection: true\n});\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,UAAU,CAAA,GAAA,oOAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,wBAAwB;IACxB,SAAS;QAAC;QAAS;QAAS;QAAM;KAAK;IAEvC,wBAAwB;IACxB,eAAe;IAEf,WAAW;IACX,cAAc;IAEd,SAAS;IACT,iBAAiB;AACnB","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/lib/locale-constants.ts"],"sourcesContent":["import { routing } from '@/i18n/routing';\n\ntype RoutingLocale = typeof routing.locales[number];\n\n/**\n * 統一的語系配置\n * 所有語系相關的常數都從這裡導出\n */\nexport const LOCALE_CONFIG = {\n    // 從 next-intl 獲取支援的語系\n    SUPPORTED_LOCALES: routing.locales,\n    DEFAULT_LOCALE: routing.defaultLocale,\n    \n    // 語系驗證函數\n    isValidLocale: (locale: string): locale is RoutingLocale => {\n        return routing.locales.includes(locale as RoutingLocale);\n    }\n} as const;\n\nexport type SupportedLocale = typeof LOCALE_CONFIG.SUPPORTED_LOCALES[number];"],"names":[],"mappings":";;;AAAA;;AAQO,MAAM,gBAAgB;IACzB,sBAAsB;IACtB,mBAAmB,wHAAA,CAAA,UAAO,CAAC,OAAO;IAClC,gBAAgB,wHAAA,CAAA,UAAO,CAAC,aAAa;IAErC,SAAS;IACT,eAAe,CAAC;QACZ,OAAO,wHAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;IACpC;AACJ","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/app/api/ssr/_utils/config.ts"],"sourcesContent":["import { LOCALE_CONFIG, type SupportedLocale } from '@/lib/locale-constants';\n\n/**\n * Mock API 配置\n */\nexport const API_CONFIG = {\n    // 快取配置\n    CACHE: {\n        DEFAULT_TTL: 300, // 5分鐘\n        STATIC_TTL: 3600, // 1小時\n        DYNAMIC_TTL: 60,  // 1分鐘\n    },\n\n    // 錯誤模擬配置\n    ERROR_SIMULATION: {\n        ENABLED: false, // 開發時可設為 true 測試錯誤處理\n        RATE: 0.05,     // 5% 的請求會返回錯誤\n    }\n} as const;\n\n/**\n * Mock API 延遲配置 (毫秒)\n * 在開發階段，Mock API（假的 API）通常會立即返回數據，但真實的 API 會有網路延遲。為了讓開發環境更接近生產環境，需要人為添加延遲。\n */\nexport const MOCK_DELAYS = {\n    LANGUAGES: 100,    // 語系清單\n    LOCALES: 150,      // 國家語系對照\n    MENUS: 200,        // 系統選單\n    WEB_DATA: 120,     // 網站資訊\n    DETAIL: 300,       // 頁面詳細內容\n} as const;\n\n/**\n * 支援的語系列表 - 從統一的語系配置獲取(lib/locale-constants.ts)\n * 確保與國際化配置保持一致\n */\nexport const SUPPORTED_LANGUAGES = LOCALE_CONFIG.SUPPORTED_LOCALES;\nexport type SupportedLanguage = SupportedLocale;\n\n/**\n * 語系驗證函數 - 重新導出以便在 API 中使用\n */\nexport const { isValidLocale } = LOCALE_CONFIG;"],"names":[],"mappings":";;;;;;AAAA;;AAKO,MAAM,aAAa;IACtB,OAAO;IACP,OAAO;QACH,aAAa;QACb,YAAY;QACZ,aAAa;IACjB;IAEA,SAAS;IACT,kBAAkB;QACd,SAAS;QACT,MAAM;IACV;AACJ;AAMO,MAAM,cAAc;IACvB,WAAW;IACX,SAAS;IACT,OAAO;IACP,UAAU;IACV,QAAQ;AACZ;AAMO,MAAM,sBAAsB,mIAAA,CAAA,gBAAa,CAAC,iBAAiB;AAM3D,MAAM,EAAE,aAAa,EAAE,GAAG,mIAAA,CAAA,gBAAa","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/lib/default-config.ts"],"sourcesContent":["/**\n * 應用程式預設配置\n * 統一管理所有預設值，避免硬編碼分散在各處\n */\nexport const DEFAULT_CONFIG = {\n    // 專案配置\n    PROJECT_NAME: process.env.NEXT_PUBLIC_PROJECT_NAME || 'minmax2025',\n    \n    // 語系配置 - 只放簡單的預設值\n    DEFAULT_LANGUAGE: 'zh-TW',\n    FALLBACK_LANGUAGE: 'zh-TW',\n    \n    // API 配置\n    API_BASE_URL: process.env.NEXT_PUBLIC_API_BASE_URL || 'https://v5.jeffy.test',\n    API_TIMEOUT: 5000,\n} as const;"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,MAAM,iBAAiB;IAC1B,OAAO;IACP,cAAc,kDAAwC;IAEtD,kBAAkB;IAClB,kBAAkB;IAClB,mBAAmB;IAEnB,SAAS;IACT,cAAc,6DAAwC;IACtD,aAAa;AACjB","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/app/api/ssr/_utils/api-helpers.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\nimport { API_CONFIG, SupportedLanguage } from './config';\nimport { DEFAULT_CONFIG } from '@/lib/default-config';\n\n/**\n * 標準參數接口\n */\nexport interface StandardParams {\n    project: string;\n    language: SupportedLanguage;\n}\n\n/**\n * 從請求中提取標準參數\n */\nexport function extractStandardParams(request: NextRequest): StandardParams {\n    const { searchParams } = new URL(request.url);\n\n    return {\n        // 優先使用 URL 參數，沒有的話使用統一配置的預設值\n        project: searchParams.get('project') || DEFAULT_CONFIG.PROJECT_NAME,\n        language: (searchParams.get('language') as SupportedLanguage) || DEFAULT_CONFIG.DEFAULT_LANGUAGE,\n    };\n}\n/**\n * 模擬 API 延遲\n */\nexport async function simulateApiDelay(delay: number): Promise<void> {\n  if (process.env.NODE_ENV === 'development') {\n    await new Promise(resolve => setTimeout(resolve, delay));\n  }\n}\n\n/**\n * 建立快取標頭\n */\nexport function createCacheHeaders(ttl: number = API_CONFIG.CACHE.DEFAULT_TTL): Record<string, string> {\n  return {\n    'Cache-Control': `public, max-age=${ttl}, s-maxage=${ttl}`,\n    'Vary': 'Accept-Language, Accept-Encoding',\n  };\n}\n\n/**\n * 深度複製物件\n */\nexport function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  \n  if (obj instanceof Date) {\n    return new Date(obj.getTime()) as unknown as T;\n  }\n  \n  if (Array.isArray(obj)) {\n    return obj.map(item => deepClone(item)) as unknown as T;\n  }\n  \n  const cloned = {} as T;\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      cloned[key] = deepClone(obj[key]);\n    }\n  }\n  \n  return cloned;\n}\n\n/**\n * 檢查是否應該模擬錯誤\n */\nexport function shouldSimulateError(): boolean {\n  if (!API_CONFIG.ERROR_SIMULATION.ENABLED) {\n    return false;\n  }\n  return Math.random() < API_CONFIG.ERROR_SIMULATION.RATE;\n}\n\n/**\n * 建立錯誤回應\n */\nexport function createErrorResponse(status: number = 500, message: string = 'Internal Server Error') {\n  return Response.json(\n    {\n      success: false,\n      error: {\n        code: status,\n        message,\n        timestamp: new Date().toISOString(),\n      }\n    },\n    { \n      status,\n      headers: {\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n      }\n    }\n  );\n}\n"],"names":[],"mappings":";;;;;;;;AACA;AACA;;;AAaO,SAAS,sBAAsB,OAAoB;IACtD,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAE5C,OAAO;QACH,6BAA6B;QAC7B,SAAS,aAAa,GAAG,CAAC,cAAc,iIAAA,CAAA,iBAAc,CAAC,YAAY;QACnE,UAAU,AAAC,aAAa,GAAG,CAAC,eAAqC,iIAAA,CAAA,iBAAc,CAAC,gBAAgB;IACpG;AACJ;AAIO,eAAe,iBAAiB,KAAa;IAClD,wCAA4C;QAC1C,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACnD;AACF;AAKO,SAAS,mBAAmB,MAAc,8IAAA,CAAA,aAAU,CAAC,KAAK,CAAC,WAAW;IAC3E,OAAO;QACL,iBAAiB,CAAC,gBAAgB,EAAE,IAAI,WAAW,EAAE,KAAK;QAC1D,QAAQ;IACV;AACF;AAKO,SAAS,UAAa,GAAM;IACjC,IAAI,QAAQ,QAAQ,OAAO,QAAQ,UAAU;QAC3C,OAAO;IACT;IAEA,IAAI,eAAe,MAAM;QACvB,OAAO,IAAI,KAAK,IAAI,OAAO;IAC7B;IAEA,IAAI,MAAM,OAAO,CAAC,MAAM;QACtB,OAAO,IAAI,GAAG,CAAC,CAAA,OAAQ,UAAU;IACnC;IAEA,MAAM,SAAS,CAAC;IAChB,IAAK,MAAM,OAAO,IAAK;QACrB,IAAI,IAAI,cAAc,CAAC,MAAM;YAC3B,MAAM,CAAC,IAAI,GAAG,UAAU,GAAG,CAAC,IAAI;QAClC;IACF;IAEA,OAAO;AACT;AAKO,SAAS;IACd,IAAI,CAAC,8IAAA,CAAA,aAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE;QACxC,OAAO;IACT;IACA,OAAO,KAAK,MAAM,KAAK,8IAAA,CAAA,aAAU,CAAC,gBAAgB,CAAC,IAAI;AACzD;AAKO,SAAS,oBAAoB,SAAiB,GAAG,EAAE,UAAkB,uBAAuB;IACjG,OAAO,SAAS,IAAI,CAClB;QACE,SAAS;QACT,OAAO;YACL,MAAM;YACN;YACA,WAAW,IAAI,OAAO,WAAW;QACnC;IACF,GACA;QACE;QACA,SAAS;YACP,iBAAiB;QACnB;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/app/api/ssr/languages/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { languagesData } from '../_data/languages.data';\nimport { simulateApiDelay, createCacheHeaders, deepClone } from '../_utils/api-helpers';\nimport { API_CONFIG, MOCK_DELAYS } from '../_utils/config';\n\n/**\n * 語系清單 API\n * \n * 用途：提供網站支援的語系清單\n * 回傳：純粹的語系清單資料，不包含當前狀態\n * \n * 注意：current 屬性應該在後續的資料處理流程中決定，\n *      而不是在這個基礎 API 中處理\n */\nexport async function GET() {\n  // 模擬 API 延遲\n  await simulateApiDelay(MOCK_DELAYS.LANGUAGES);\n\n  // 回傳純粹的語系資料\n  const data = deepClone(languagesData);\n\n  return NextResponse.json(data, {\n    headers: createCacheHeaders(API_CONFIG.CACHE.DEFAULT_TTL)\n  });\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAWO,eAAe;IACpB,YAAY;IACZ,MAAM,CAAA,GAAA,sJAAA,CAAA,mBAAgB,AAAD,EAAE,8IAAA,CAAA,cAAW,CAAC,SAAS;IAE5C,YAAY;IACZ,MAAM,OAAO,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAD,EAAE,wJAAA,CAAA,gBAAa;IAEpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;QAC7B,SAAS,CAAA,GAAA,sJAAA,CAAA,qBAAkB,AAAD,EAAE,8IAAA,CAAA,aAAU,CAAC,KAAK,CAAC,WAAW;IAC1D;AACF","debugId":null}}]
}