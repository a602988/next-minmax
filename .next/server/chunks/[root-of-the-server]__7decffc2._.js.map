{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/app/api/ssr/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\n/**\n * Mock API 總覽\n *\n * 提供所有可用的 Mock API 端點資訊\n */\nexport async function GET(request: NextRequest) {\n    const baseUrl = new URL(request.url).origin;\n\n    const apiEndpoints = {\n        success: true,\n        data: {\n            endpoints: {\n                languages: {\n                    url: `${baseUrl}/api/ssr/languages`,\n                    method: 'GET',\n                    description: '語系清單',\n                    params: ['project', 'language']\n                },\n                locales: {\n                    url: `${baseUrl}/api/ssr/locales`,\n                    method: 'GET',\n                    description: '國家語系對照表',\n                    params: ['project', 'language']\n                },\n                'system-menus': {\n                    url: `${baseUrl}/api/ssr/system-menus`,\n                    method: 'GET',\n                    description: '系統選單',\n                    params: ['project', 'language', 'type?']\n                },\n                'web-data': {\n                    url: `${baseUrl}/api/ssr/web-data`,\n                    method: 'GET',\n                    description: '網站資訊',\n                    params: ['project', 'language']\n                },\n                detail: {\n                    url: `${baseUrl}/api/ssr/detail`,\n                    method: 'GET',\n                    description: '頁面詳細內容',\n                    params: ['project', 'language', 'slug?']\n                }\n            },\n            usage: {\n                example: `${baseUrl}/api/ssr/languages?project=main&language=zh`,\n                note: 'All APIs support CORS and return JSON format'\n            }\n        },\n        meta: {\n            version: '1.0.0',\n            timestamp: new Date().toISOString(),\n            environment: process.env.NODE_ENV\n        }\n    };\n\n    return NextResponse.json(apiEndpoints, {\n        headers: {\n            'Cache-Control': 'public, max-age=3600',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type',\n        }\n    });\n}"],"names":[],"mappings":";;;AAAA;;AAOO,eAAe,IAAI,OAAoB;IAC1C,MAAM,UAAU,IAAI,IAAI,QAAQ,GAAG,EAAE,MAAM;IAE3C,MAAM,eAAe;QACjB,SAAS;QACT,MAAM;YACF,WAAW;gBACP,WAAW;oBACP,KAAK,GAAG,QAAQ,kBAAkB,CAAC;oBACnC,QAAQ;oBACR,aAAa;oBACb,QAAQ;wBAAC;wBAAW;qBAAW;gBACnC;gBACA,SAAS;oBACL,KAAK,GAAG,QAAQ,gBAAgB,CAAC;oBACjC,QAAQ;oBACR,aAAa;oBACb,QAAQ;wBAAC;wBAAW;qBAAW;gBACnC;gBACA,gBAAgB;oBACZ,KAAK,GAAG,QAAQ,qBAAqB,CAAC;oBACtC,QAAQ;oBACR,aAAa;oBACb,QAAQ;wBAAC;wBAAW;wBAAY;qBAAQ;gBAC5C;gBACA,YAAY;oBACR,KAAK,GAAG,QAAQ,iBAAiB,CAAC;oBAClC,QAAQ;oBACR,aAAa;oBACb,QAAQ;wBAAC;wBAAW;qBAAW;gBACnC;gBACA,QAAQ;oBACJ,KAAK,GAAG,QAAQ,eAAe,CAAC;oBAChC,QAAQ;oBACR,aAAa;oBACb,QAAQ;wBAAC;wBAAW;wBAAY;qBAAQ;gBAC5C;YACJ;YACA,OAAO;gBACH,SAAS,GAAG,QAAQ,2CAA2C,CAAC;gBAChE,MAAM;YACV;QACJ;QACA,MAAM;YACF,SAAS;YACT,WAAW,IAAI,OAAO,WAAW;YACjC,WAAW;QACf;IACJ;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,cAAc;QACnC,SAAS;YACL,iBAAiB;YACjB,+BAA+B;YAC/B,gCAAgC;YAChC,gCAAgC;QACpC;IACJ;AACJ","debugId":null}}]
}