{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/linchian/Documents/GitHub/next-minmax/src/features/language/presentation/LanguageProvider.tsx"],"sourcesContent":["// src/features/language/presentation/LanguageProvider.tsx\n'use client';\n\nimport React, { createContext, useContext } from 'react';\nimport type { Language } from '@/types';\n\ntype LanguageContextValue = {\n    languages: Language[];\n};\n\nconst LanguageContext = createContext<LanguageContextValue | null>(null);\n\nexport function LanguageProvider(props: { languages: Language[]; children: React.ReactNode }) {\n    return (\n        <LanguageContext.Provider value={{ languages: props.languages }}>\n            {props.children}\n        </LanguageContext.Provider>\n    );\n}\n\nexport function useLanguageContext(): LanguageContextValue {\n    const ctx = useContext(LanguageContext);\n    if (!ctx) {\n        throw new Error('useLanguageContext must be used within LanguageProvider');\n    }\n    return ctx;\n}"],"names":[],"mappings":"AAAA,0DAA0D;;;;;;AAG1D;;;AAFA;;AASA,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAE5D,SAAS,iBAAiB,KAA2D;IACxF,qBACI,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE,WAAW,MAAM,SAAS;QAAC;kBACzD,MAAM,QAAQ;;;;;;AAG3B;KANgB;AAQT,SAAS;;IACZ,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IACvB,IAAI,CAAC,KAAK;QACN,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX;GANgB","debugId":null}}]
}